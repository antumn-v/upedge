<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.upedge.ums.modules.account.dao.RechargeRecordDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.upedge.ums.modules.account.entity.RechargeRecord" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="rechargeId" column="recharge_id"/>
        <result property="customerId" column="customer_id"/>
        <result property="orderId" column="order_id"/>
        <result property="orderType" column="order_type"/>
        <result property="amount" column="amount"/>
        <result property="source" column="source"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.upedge.ums.modules.account.vo.RechargeRecordVo" id="RechargeRecordVo">
        <result property="id" column="id"/>
        <result property="rechargeId" column="recharge_id"/>
        <result property="amount" column="amount"/>
        <result property="orderId" column="order_id"/>
        <result property="orderType" column="order_type"/>
        <result property="createTime" column="create_time"/>
        <result property="source" column="source"/>
        <result property="seq" column="seq"/>
        <association property="rechargeLog" javaType="com.upedge.ums.modules.account.vo.RechargeLogVo">
            <result column="rl_account_id" property="accountId"/>
            <result column="rl_relate_id" property="relateId" />
            <result column="rl_amount" property="amount"/>
            <result column="rl_rebate" property="rebate" />
            <result column="rl_payed" property="payed"  />
            <result column="rl_recharge_status" property="rechargeStatus" />
            <result column="rl_recharge_type" property="rechargeType"/>
        </association>
    </resultMap>

    <sql id="Base_Column_List">
        `id`,`recharge_id`,`customer_id`,`order_id`,`order_type`,`amount`,`source`,`create_time`
    </sql>

    <select id="selectByPrimaryKey" parameterType="com.upedge.ums.modules.account.entity.RechargeRecord" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from recharge_record
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="com.upedge.ums.modules.account.entity.RechargeRecord">
        delete from recharge_record
        where id = #{id}
    </delete>

    <update id="updateByPrimaryKeySelective" parameterType="com.upedge.ums.modules.account.entity.RechargeRecord">
        update recharge_record
        <set>
            <if test="rechargeId != null">
                recharge_id = #{rechargeId},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId},
            </if>
            <if test="orderId != null">
                order_id = #{orderId},
            </if>
            <if test="orderType != null">
                order_type = #{orderType},
            </if>
            <if test="amount != null">
                amount = #{amount},
            </if>
            <if test="source != null">
                source = #{source},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.upedge.ums.modules.account.entity.RechargeRecord">
        update recharge_record
        <set>
            id = #{id},
            recharge_id = #{rechargeId},
            customer_id = #{customerId},
            order_id = #{orderId},
            order_type = #{orderType},
            amount = #{amount},
            source = #{source},
            create_time = #{createTime},
        </set>
        where id = #{id}
    </update>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.upedge.ums.modules.account.entity.RechargeRecord" useGeneratedKeys="true">
        insert into recharge_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            recharge_id,
            customer_id,
            order_id,
            order_type,
            amount,
            source,
            create_time
        </trim>
        values (
        #{id},
        #{rechargeId},
        #{customerId},
        #{orderId},
        #{orderType},
        #{amount},
        #{source},
        #{createTime}
        )
    </insert>

    <insert id="insertSelective"  keyColumn="id" keyProperty="id"  parameterType="com.upedge.ums.modules.account.entity.RechargeRecord" useGeneratedKeys="true">
        insert into recharge_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                id
            </if>
            <if test="rechargeId != null" >
                recharge_id
            </if>
            <if test="customerId != null" >
                customer_id
            </if>
            <if test="orderId != null" >
                order_id
            </if>
            <if test="orderType != null" >
                order_type
            </if>
            <if test="amount != null" >
                amount
            </if>
            <if test="source != null" >
                source
            </if>
            <if test="createTime != null" >
                create_time
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                #{id}
            </if>
            <if test="rechargeId != null" >
                #{rechargeId}
            </if>
            <if test="customerId != null" >
                #{customerId}
            </if>
            <if test="orderId != null" >
                #{orderId}
            </if>
            <if test="orderType != null" >
                #{orderType}
            </if>
            <if test="amount != null" >
                #{amount}
            </if>
            <if test="source != null" >
                #{source}
            </if>
            <if test="createTime != null" >
                #{createTime}
            </if>

        </trim>
    </insert>

    <insert id="insertByBatch" parameterType="java.util.List">
        insert into recharge_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            recharge_id,
            customer_id,
            order_id,
            order_type,
            amount,
            source,
            create_time,
            seq
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.id},
                #{item.rechargeId},
                #{item.customerId},
                #{item.orderId},
                #{item.orderType},
                #{item.amount},
                #{item.source},
                #{item.createTime},
                #{item.seq}
            </trim>
        </foreach>
    </insert>

    <sql id="Query_Condition">
        <if test="t != null">
            where
            <trim prefix=" " suffix=" " suffixOverrides=" and ">
                1 = 1 and
                <if test="t.id != null">
                    id = #{t.id} and
                </if>
                <if test="t.rechargeId != null">
                    recharge_id = #{t.rechargeId} and
                </if>
                <if test="t.customerId != null">
                    customer_id = #{t.customerId} and
                </if>
                <if test="t.orderId != null">
                    order_id = #{t.orderId} and
                </if>
                <if test="t.orderType != null">
                    order_type = #{t.orderType} and
                </if>
                <if test="t.amount != null">
                    amount = #{t.amount} and
                </if>
                <if test="t.source != null">
                    source = #{t.source} and
                </if>
                <if test="t.createTime != null">
                    create_time = #{t.createTime} and
                </if>
            </trim>
        </if>
    </sql>

    <select id="select" parameterType="com.upedge.common.base.Page" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from recharge_record
        <include refid="Query_Condition"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="pageNum != null and pageSize != null">
            limit #{fromNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="count" parameterType="com.upedge.common.base.Page" resultType="java.lang.Long">
        select
        count(1)
        from recharge_record
        <include refid="Query_Condition"/>
    </select>

    <select id="listRechargeRecordRefundSeqByOrderId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from recharge_record
        where order_id=#{orderId} and order_type=#{orderType}
        order by `seq` asc
    </select>

    <select id="listRechargeRecordByOrderId" resultType="com.upedge.ums.modules.account.vo.RecordVo">
        select
        rr.`id` as id,
        rr.`recharge_id` as relateId,
        rr.`amount` as amount,
        rr.`order_id` as orderId,
        rr.`create_time` as createTime,
        rr.`seq` as seq,
        rr.`source` as source
        from recharge_record rr
        left join recharge_log rl on rl.id=rr.recharge_id
        where rr.order_id=#{orderId}
        order by rr.seq
    </select>

</mapper>
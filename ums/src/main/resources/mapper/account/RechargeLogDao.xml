<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.upedge.ums.modules.account.dao.RechargeLogDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.upedge.ums.modules.account.entity.RechargeLog" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="accountId" column="account_id"/>
        <result property="relateId" column="relate_id"/>
        <result property="amount" column="amount"/>
        <result property="rebate" column="rebate"/>
        <result property="payed" column="payed"/>
        <result property="rechargeStatus" column="recharge_status"/>
        <result property="rechargeType" column="recharge_type"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="Base_Column_List">
        `id`,`account_id`,`relate_id`,`amount`,`rebate`,`payed`,`recharge_status`,`recharge_type`,`create_time`,`update_time`
    </sql>

    <select id="selectByPrimaryKey" parameterType="com.upedge.ums.modules.account.entity.RechargeLog" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from recharge_log
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="com.upedge.ums.modules.account.entity.RechargeLog">
        delete from recharge_log
        where id = #{id}
    </delete>

    <update id="updateByPrimaryKeySelective" parameterType="com.upedge.ums.modules.account.entity.RechargeLog">
        update recharge_log
        <set>
            <if test="accountId != null">
                account_id = #{accountId},
            </if>
            <if test="relateId != null">
                relate_id = #{relateId},
            </if>
            <if test="amount != null">
                amount = #{amount},
            </if>
            <if test="rebate != null">
                rebate = #{rebate},
            </if>
            <if test="payed != null">
                payed = #{payed},
            </if>
            <if test="rechargeStatus != null">
                recharge_status = #{rechargeStatus},
            </if>
            <if test="rechargeType != null">
                recharge_type = #{rechargeType},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.upedge.ums.modules.account.entity.RechargeLog">
        update recharge_log
        <set>
        id = #{id},
        account_id = #{accountId},
        relate_id = #{relateId},
        amount = #{amount},
        rebate = #{rebate},
        payed = #{payed},
        recharge_status = #{rechargeStatus},
        recharge_type = #{rechargeType},
        create_time = #{createTime},
        update_time = #{updateTime},
        </set>
        where id = #{id}
    </update>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.upedge.ums.modules.account.entity.RechargeLog" useGeneratedKeys="true">
        insert into recharge_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            account_id,
            relate_id,
            amount,
            rebate,
            payed,
            recharge_status,
            recharge_type,
            create_time,
            update_time
        </trim>
        values (
        #{id},
        #{accountId},
        #{relateId},
        #{amount},
        #{rebate},
        #{payed},
        #{rechargeStatus},
        #{rechargeType},
        #{createTime},
        #{updateTime}
        )
    </insert>

    <insert id="insertSelective"  keyColumn="id" keyProperty="id"  parameterType="com.upedge.ums.modules.account.entity.RechargeLog" useGeneratedKeys="true">
        insert into recharge_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null" >
              id
            </if>
            <if test="accountId != null" >
              account_id
            </if>
            <if test="relateId != null" >
              relate_id
            </if>
            <if test="amount != null" >
              amount
            </if>
            <if test="rebate != null" >
              rebate
            </if>
            <if test="payed != null" >
              payed
            </if>
            <if test="rechargeStatus != null" >
              recharge_status
            </if>
            <if test="rechargeType != null" >
              recharge_type
            </if>
            <if test="createTime != null" >
              create_time
            </if>
            <if test="updateTime != null" >
              update_time
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                #{id}
            </if>
            <if test="accountId != null" >
                #{accountId}
            </if>
            <if test="relateId != null" >
                #{relateId}
            </if>
            <if test="amount != null" >
                #{amount}
            </if>
            <if test="rebate != null" >
                #{rebate}
            </if>
            <if test="payed != null" >
                #{payed}
            </if>
            <if test="rechargeStatus != null" >
                #{rechargeStatus}
            </if>
            <if test="rechargeType != null" >
                #{rechargeType}
            </if>
            <if test="createTime != null" >
                #{createTime}
            </if>
            <if test="updateTime != null" >
                #{updateTime}
            </if>

        </trim>
    </insert>

    <insert id="insertByBatch" parameterType="java.util.List">
        insert into recharge_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
           id,
           account_id,
           relate_id,
           amount,
           rebate,
           payed,
           recharge_status,
           recharge_type,
           create_time,
           update_time
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
               #{item.id},
               #{item.accountId},
               #{item.relateId},
               #{item.amount},
               #{item.rebate},
               #{item.payed},
               #{item.rechargeStatus},
               #{item.rechargeType},
               #{item.createTime},
               #{item.updateTime}
            </trim>
        </foreach>
    </insert>

    <sql id="Query_Condition">
        <if test="t != null">
            where
            <trim prefix=" " suffix=" " suffixOverrides=" and ">
                1 = 1 and
                    <if test="t.id != null">
                        id = #{t.id} and
                    </if>
                    <if test="t.accountId != null">
                        account_id = #{t.accountId} and
                    </if>
                    <if test="t.relateId != null">
                        relate_id = #{t.relateId} and
                    </if>
                    <if test="t.amount != null">
                        amount = #{t.amount} and
                    </if>
                    <if test="t.rebate != null">
                        rebate = #{t.rebate} and
                    </if>
                    <if test="t.payed != null">
                        payed = #{t.payed} and
                    </if>
                    <if test="t.rechargeStatus != null">
                        recharge_status = #{t.rechargeStatus} and
                    </if>
                    <if test="t.rechargeType != null">
                        recharge_type = #{t.rechargeType} and
                    </if>
                    <if test="t.createTime != null">
                        create_time = #{t.createTime} and
                    </if>
                    <if test="t.updateTime != null">
                        update_time = #{t.updateTime} and
                    </if>
            </trim>
        </if>
    </sql>

    <select id="select" parameterType="com.upedge.common.base.Page" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from recharge_log
        <include refid="Query_Condition"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="pageNum != null and pageSize != null">
            limit #{fromNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="count" parameterType="com.upedge.common.base.Page" resultType="java.lang.Long">
        select
        count(1)
        from recharge_log
        <include refid="Query_Condition"/>
    </select>


</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.upedge.ums.modules.user.dao.UserDao">
    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.upedge.ums.modules.user.entity.User" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="customerId" column="customer_id"/>
        <result property="loginName" column="login_name"/>
        <result property="loginPass" column="login_pass"/>
        <result property="userType" column="user_type"/>
        <result property="status" column="status"/>
        <result property="username" column="username"/>
        <result property="avatar" column="avatar"/>
        <result property="mobile" column="mobile"/>
        <result property="email" column="email"/>
        <result property="country" column="country"/>
        <result property="whatsapp" column="whatsapp"/>
        <result property="wechat" column="wechat"/>
        <result property="fbInfo" column="fb_info"/>
        <result property="skype" column="skype"/>
        <result property="sex" column="sex"/>
        <result property="loginCount" column="login_count"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="lastLoginTime" column="last_login_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="Base_Column_List">
        `id`
                ,`customer_id`,`login_name`,`login_pass`,`user_type`,`status`,`create_time`,`update_time`,`last_login_time`,`login_count`,
        `username`,`avatar`,`mobile`,`email`,`country`,`whatsapp`,`wechat`,`fb_info`,`skype`,`sex`,remark
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="com.upedge.ums.modules.user.entity.User">
        delete
        from user
        where id = #{id}
    </delete>

    <update id="updateByPrimaryKeySelective" parameterType="com.upedge.ums.modules.user.entity.User">
        update `user`
        <set>
            <if test="loginName != null">
                login_name = #{loginName},
            </if>
            <if test="loginPass != null">
                login_pass = #{loginPass},
            </if>
            <if test="userType != null">
                user_type = #{userType},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            <if test="mobile != null">
                mobile = #{mobile},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="country != null">
                country = #{country},
            </if>
            <if test="whatsapp != null">
                whatsapp = #{whatsapp},
            </if>
            <if test="wechat != null">
                wechat = #{wechat},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="fbInfo != null">
                fb_info = #{fbInfo},
            </if>
            <if test="skype != null">
                skype = #{skype},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="loginCount != null">
                login_count = #{loginCount},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.upedge.ums.modules.user.entity.User">
        update user
        <set>
            id = #{id},
            customer_id = #{customerId},
            login_name = #{loginName},
            login_pass = #{loginPass},
            user_type = #{userType},
            status = #{status},
            username = #{username},
            avatar = #{avatar},
            mobile = #{mobile},
            email = #{email},
            country = #{country},
            whatsapp = #{whatsapp},
            wechat = #{wechat},
            fb_info = #{fbInfo},
            skype = #{skype},
            sex = #{sex},
            login_count = #{loginCount},
            create_time = #{createTime},
            update_time = #{updateTime},
            last_login_time = #{lastLoginTime},
        </set>
        where id = #{id}
    </update>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.upedge.ums.modules.user.entity.User"
            useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            customer_id,
            login_name,
            login_pass,
            user_type,
            status,
            username,
            avatar,
            mobile,
            email,
            country,
            whatsapp,
            wechat,
            fb_info,
            skype,
            sex,
            login_count,
            create_time,
            update_time,
            last_login_time
        </trim>
        values (
        #{id},
        #{customerId},
        #{loginName},
        #{loginPass},
        #{userType},
        #{status},
        #{username},
        #{avatar},
        #{mobile},
        #{email},
        #{country},
        #{whatsapp},
        #{wechat},
        #{fbInfo},
        #{skype},
        #{sex},
        #{loginCount},
        #{createTime},
        #{updateTime},
        #{lastLoginTime}
        )
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.upedge.ums.modules.user.entity.User"
            useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id
            </if>
            <if test="customerId != null">
                customer_id
            </if>
            <if test="loginName != null">
                login_name
            </if>
            <if test="loginPass != null">
                login_pass
            </if>
            <if test="userType != null">
                user_type
            </if>
            <if test="status != null">
                status
            </if>
            <if test="username != null">
                username
            </if>
            <if test="avatar != null">
                avatar
            </if>
            <if test="mobile != null">
                mobile
            </if>
            <if test="email != null">
                email
            </if>
            <if test="country != null">
                country
            </if>
            <if test="whatsapp != null">
                whatsapp
            </if>
            <if test="wechat != null">
                wechat
            </if>
            <if test="fbInfo != null">
                fb_info
            </if>
            <if test="skype != null">
                skype
            </if>
            <if test="sex != null">
                sex
            </if>
            <if test="loginCount != null">
                login_count
            </if>
            <if test="createTime != null">
                create_time
            </if>
            <if test="updateTime != null">
                update_time
            </if>
            <if test="lastLoginTime != null">
                last_login_time
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id}
            </if>
            <if test="customerId != null">
                #{customerId}
            </if>
            <if test="loginName != null">
                #{loginName}
            </if>
            <if test="loginPass != null">
                #{loginPass}
            </if>
            <if test="userType != null">
                #{userType}
            </if>
            <if test="status != null">
                #{status}
            </if>
            <if test="username != null">
                #{username}
            </if>
            <if test="avatar != null">
                #{avatar}
            </if>
            <if test="mobile != null">
                #{mobile}
            </if>
            <if test="email != null">
                #{email}
            </if>
            <if test="country != null">
                #{country}
            </if>
            <if test="whatsapp != null">
                #{whatsapp}
            </if>
            <if test="wechat != null">
                #{wechat}
            </if>
            <if test="fbInfo != null">
                #{fbInfo}
            </if>
            <if test="skype != null">
                #{skype}
            </if>
            <if test="sex != null">
                #{sex}
            </if>
            <if test="loginCount != null">
                #{loginCount}
            </if>
            <if test="createTime != null">
                #{createTime}
            </if>
            <if test="updateTime != null">
                #{updateTime}
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime}
            </if>
        </trim>
    </insert>

    <insert id="insertByBatch" parameterType="java.util.List">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            customer_id,
            login_name,
            login_pass,
            user_type,
            status,
            username,
            avatar,
            mobile,
            email,
            country,
            whatsapp,
            wechat,
            fb_info,
            skype,
            sex,
            login_count,
            create_time,
            update_time,
            last_login_time
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.id},
                #{item.customerId},
                #{item.loginName},
                #{item.loginPass},
                #{item.userType},
                #{item.status},
                #{item.username},
                #{item.avatar},
                #{item.mobile},
                #{item.email},
                #{item.country},
                #{item.whatsapp},
                #{item.wechat},
                #{item.fbInfo},
                #{item.skype},
                #{item.sex},
                #{item.loginCount},
                #{item.createTime},
                #{item.updateTime},
                #{item.lastLoginTime}
            </trim>
        </foreach>
    </insert>

    <sql id="Query_Condition">
        <if test="t != null">
            where
            <trim prefix=" " suffix=" " suffixOverrides=" and ">
                1 = 1 and
                <if test="t.id != null">
                    id = #{t.id} and
                </if>
                <if test="t.customerId != null">
                    customer_id = #{t.customerId} and
                </if>
                <if test="t.loginName != null">
                    login_name = #{t.loginName} and
                </if>
                <if test="t.userType != null">
                    user_type = #{t.userType} and
                </if>
                <if test="t.status != null">
                    status = #{t.status} and
                </if>
                <if test="t.username != null">
                    username like concat('%',#{t.username},'%') and
                </if>
                <if test="t.avatar != null">
                    avatar = #{t.avatar} and
                </if>
                <if test="t.mobile != null">
                    mobile = #{t.mobile} and
                </if>
                <if test="t.email != null">
                    email = #{t.email} and
                </if>
                <if test="t.country != null">
                    country = #{t.country} and
                </if>
                <if test="t.whatsapp != null">
                    whatsapp = #{t.whatsapp} and
                </if>
                <if test="t.wechat != null">
                    wechat = #{t.wechat} and
                </if>
                <if test="t.fbInfo != null">
                    fb_info = #{t.fbInfo} and
                </if>
                <if test="t.skype != null">
                    skype = #{t.skype} and
                </if>
                <if test="t.sex != null">
                    sex = #{t.sex} and
                </if>
            </trim>
        </if>
    </sql>

    <update id="refreshLoginData">
        update user
        set last_login_time=#{lastLoginTime},
            login_count=login_count + 1
        where id = #{id}
    </update>

    <select id="select" parameterType="com.upedge.common.base.Page" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        <include refid="Query_Condition"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="pageNum != null and pageSize != null">
            limit #{fromNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="count" parameterType="com.upedge.common.base.Page" resultType="java.lang.Long">
        select
        count(1)
        from user
        <include refid="Query_Condition"/>
    </select>

    <select id="selectUserByLoginName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `user`
        where login_name = #{loginName}
    </select>
    <select id="selectByLoginName" resultType="com.upedge.ums.modules.user.entity.User">
        select
        <include refid="Base_Column_List"/>
        from `user`
        where login_name = #{loginName}
    </select>

    <update id="resetUserPassword">
        update `user`
        set login_pass=#{loginPass},
            update_time=#{updateTime}
        where id = #{id}
          and customer_id = #{customerId}
    </update>

    <select id="selectAllDefaultCustomerInfo" resultMap="BaseResultMap">
        select u.`id`,
               u.`customer_id`,
               u.`login_name`,
               u.`user_type`,
               u.`status`,
               u.`create_time`,
               u.`update_time`,
               u.`last_login_time`,
               u.`login_count`,
               u.`username`,
               u.`avatar`,
               u.`mobile`,
               u.`email`,
               u.`country`,
               u.`whatsapp`,
               u.`wechat`,
               u.`fb_info`,
               u.`skype`,
               u.`sex`,
               u.remark
        from `user` u
        where u.is_default = '1'
    </select>
</mapper>
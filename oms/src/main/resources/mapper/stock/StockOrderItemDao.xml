<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.upedge.oms.modules.stock.dao.StockOrderItemDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.upedge.oms.modules.stock.entity.StockOrderItem" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="productId" column="product_id"/>
        <result property="variantId" column="variant_id"/>
        <result property="orderId" column="order_id"/>
        <result property="cartId" column="cart_id"/>
        <result property="price" column="price"/>
        <result property="quantity" column="quantity"/>
        <result property="productTitle" column="product_title"/>
        <result property="variantName" column="variant_name"/>
        <result property="variantSku" column="variant_sku"/>
        <result property="variantImage" column="variant_image"/>
        <result property="inboundQuantity" column="inbound_quantity"/>
        <result property="purchaseNo" column="purchase_no"/>
    </resultMap>

    <sql id="Base_Column_List">
        `id`,`product_id`,`variant_id`,`order_id`,`cart_id`,`price`,`quantity`,`product_title`,`variant_name`,`variant_sku`,`variant_image`,`inbound_quantity`,`purchase_no`
    </sql>

    <select id="countVariantQuantityByOrderPaymentId" resultMap="BaseResultMap">
        select item.variant_id,sum(item.quantity) as quantity,
        item.variant_image,item.product_id,item.variant_sku,item.product_title,item.variant_name
        from stock_order_item item
        inner join stock_order o
        on item.order_id = o.id
        where o.payment_id = #{paymentId}
        and o.pay_state = '1'
        group by item.variant_id,item.variant_image,item.product_id,item.variant_sku,item.product_title,item.variant_name
    </select>


    <update id="updatePriceByVariantId">
        update stock_order_item soi
        inner join stock_order so
        on soi.order_id = so.id
        set price = #{price}
        where variant_id = #{variantId}
        and so.pay_state = '0'
    </update>

    <select id="selectByPrimaryKey" parameterType="com.upedge.oms.modules.stock.entity.StockOrderItem" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stock_order_item
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="com.upedge.oms.modules.stock.entity.StockOrderItem">
        delete from stock_order_item
        where id = #{id}
    </delete>

    <update id="updateByPrimaryKeySelective" parameterType="com.upedge.oms.modules.stock.entity.StockOrderItem">
        update stock_order_item
        <set>
            <if test="productId != null">
                product_id = #{productId},
            </if>
            <if test="variantId != null">
                variant_id = #{variantId},
            </if>
            <if test="orderId != null">
                order_id = #{orderId},
            </if>
            <if test="cartId != null">
                cart_id = #{cartId},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="quantity != null">
                quantity = #{quantity},
            </if>
            <if test="productTitle != null">
                product_title = #{productTitle},
            </if>
            <if test="variantName != null">
                variant_name = #{variantName},
            </if>
            <if test="variantSku != null">
                variant_sku = #{variantSku},
            </if>
            <if test="variantImage != null">
                variant_image = #{variantImage},
            </if>
            <if test="inboundQuantity != null">
                inbound_quantity = #{inboundQuantity},
            </if>
            <if test="purchaseNo != null">
                purchase_no = #{purchaseNo},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.upedge.oms.modules.stock.entity.StockOrderItem">
        update stock_order_item
        <set>
            id = #{id},
            product_id = #{productId},
            variant_id = #{variantId},
            order_id = #{orderId},
            cart_id = #{cartId},
            price = #{price},
            quantity = #{quantity},
            product_title = #{productTitle},
            variant_name = #{variantName},
            variant_sku = #{variantSku},
            variant_image = #{variantImage},
            inbound_quantity = #{inboundQuantity},
            purchase_no = #{purchaseNo},
        </set>
        where id = #{id}
    </update>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.upedge.oms.modules.stock.entity.StockOrderItem" useGeneratedKeys="true">
        insert into stock_order_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            product_id,
            variant_id,
            order_id,
            cart_id,
            price,
            quantity,
            product_title,
            variant_name,
            variant_sku,
            variant_image,
            inbound_quantity,
            purchase_no
        </trim>
        values (
        #{id},
        #{productId},
        #{variantId},
        #{orderId},
        #{cartId},
        #{price},
        #{quantity},
        #{productTitle},
        #{variantName},
        #{variantSku},
        #{variantImage},
        #{inboundQuantity},
        #{purchaseNo}
        )
    </insert>

    <insert id="insertSelective"  keyColumn="id" keyProperty="id"  parameterType="com.upedge.oms.modules.stock.entity.StockOrderItem" useGeneratedKeys="true">
        insert into stock_order_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                id
            </if>
            <if test="productId != null" >
                product_id
            </if>
            <if test="variantId != null" >
                variant_id
            </if>
            <if test="orderId != null" >
                order_id
            </if>
            <if test="cartId != null" >
                cart_id
            </if>
            <if test="price != null" >
                price
            </if>
            <if test="quantity != null" >
                quantity
            </if>
            <if test="productTitle != null" >
                product_title
            </if>
            <if test="variantName != null" >
                variant_name
            </if>
            <if test="variantSku != null" >
                variant_sku
            </if>
            <if test="variantImage != null" >
                variant_image
            </if>
            <if test="inboundQuantity != null" >
                inbound_quantity
            </if>
            <if test="purchaseNo != null" >
                purchase_no
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                #{id}
            </if>
            <if test="productId != null" >
                #{productId}
            </if>
            <if test="variantId != null" >
                #{variantId}
            </if>
            <if test="orderId != null" >
                #{orderId}
            </if>
            <if test="cartId != null" >
                #{cartId}
            </if>
            <if test="price != null" >
                #{price}
            </if>
            <if test="quantity != null" >
                #{quantity}
            </if>
            <if test="productTitle != null" >
                #{productTitle}
            </if>
            <if test="variantName != null" >
                #{variantName}
            </if>
            <if test="variantSku != null" >
                #{variantSku}
            </if>
            <if test="variantImage != null" >
                #{variantImage}
            </if>
            <if test="inboundQuantity != null" >
                #{inboundQuantity}
            </if>
            <if test="purchaseNo != null" >
                #{purchaseNo}
            </if>

        </trim>
    </insert>

    <insert id="insertByBatch" parameterType="java.util.List">
        insert into stock_order_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            product_id,
            variant_id,
            order_id,
            cart_id,
            price,
            quantity,
            product_title,
            variant_name,
            variant_sku,
            variant_image,
            inbound_quantity,
            purchase_no
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.id},
                #{item.productId},
                #{item.variantId},
                #{item.orderId},
                #{item.cartId},
                #{item.price},
                #{item.quantity},
                #{item.productTitle},
                #{item.variantName},
                #{item.variantSku},
                #{item.variantImage},
                #{item.inboundQuantity},
                #{item.purchaseNo}
            </trim>
        </foreach>
    </insert>

    <sql id="Query_Condition">
        <if test="t != null">
            where
            <trim prefix=" " suffix=" " suffixOverrides=" and ">
                1 = 1 and
                <if test="t.id != null">
                    id = #{t.id} and
                </if>
                <if test="t.productId != null">
                    product_id = #{t.productId} and
                </if>
                <if test="t.variantId != null">
                    variant_id = #{t.variantId} and
                </if>
                <if test="t.orderId != null">
                    order_id = #{t.orderId} and
                </if>
                <if test="t.cartId != null">
                    cart_id = #{t.cartId} and
                </if>
                <if test="t.price != null">
                    price = #{t.price} and
                </if>
                <if test="t.quantity != null">
                    quantity = #{t.quantity} and
                </if>
                <if test="t.productTitle != null">
                    product_title = #{t.productTitle} and
                </if>
                <if test="t.variantName != null">
                    variant_name = #{t.variantName} and
                </if>
                <if test="t.variantSku != null">
                    variant_sku = #{t.variantSku} and
                </if>
                <if test="t.variantImage != null">
                    variant_image = #{t.variantImage} and
                </if>
                <if test="t.inboundQuantity != null">
                    inbound_quantity = #{t.inboundQuantity} and
                </if>
                <if test="t.purchaseNo != null">
                    purchase_no = #{t.purchaseNo} and
                </if>
            </trim>
        </if>
    </sql>

    <select id="select" parameterType="com.upedge.common.base.Page" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stock_order_item
        <include refid="Query_Condition"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="pageNum != null and pageSize != null">
            limit #{fromNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="count" parameterType="com.upedge.common.base.Page" resultType="java.lang.Long">
        select
        count(1)
        from stock_order_item
        <include refid="Query_Condition"/>
    </select>

    <select id="listOrderItemByOrderId" resultType="com.upedge.oms.modules.stock.entity.StockOrderItem">
       select
       i.id as id,
       i.product_id as productId,
       i.variant_id as variantId,
       i.price as price,
       i.quantity as quantity,
       i.variant_image as variantImage,
       i.variant_sku as variantSku,
       v.saihe_sku as saiheSku
       from stock_order_item  i
       left join saihe_sku_relate v on v.variant_sku=i.variant_sku
       where i.order_id=#{orderId}
    </select>

    <select id="queryStockOrderItem"  resultMap="BaseResultMap">
       select
       <include refid="Base_Column_List" />
       from stock_order_item
       where id=#{id} and order_id=#{orderId}
    </select>

</mapper>
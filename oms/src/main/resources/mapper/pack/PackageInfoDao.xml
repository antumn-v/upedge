<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.upedge.oms.modules.pack.dao.PackageInfoDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.upedge.oms.modules.pack.entity.PackageInfo" id="BaseResultMap">
        <result property="packageId" column="package_id"/>
        <result property="packageCountry" column="package_country"/>
        <result property="shipTime" column="ship_time"/>
        <result property="transportId" column="transport_id"/>
        <result property="transportName" column="transport_name"/>
        <result property="packageWeight" column="package_weight"/>
        <result property="finalShippingFee" column="final_shipping_fee"/>
        <result property="logisticsId" column="logistics_id"/>
        <result property="trackNumber" column="track_number"/>
        <result property="orderAmount" column="order_amount"/>
        <result property="purchaseAmount" column="purchase_amount"/>
        <result property="clientSku" column="client_sku"/>
        <result property="quantity" column="quantity"/>
        <result property="operationUsername" column="operation_username"/>
        <result property="orderCount" column="order_count"/>
        <result property="infoCount" column="info_count"/>
        <result property="shipDate" column="ship_date"/>
        <result property="updateToken" column="update_token"/>
        <result property="handleTime" column="handle_time"/>
        <result property="packageAddTime" column="package_add_time"/>
    </resultMap>

    <sql id="Base_Column_List">
    `id`  ,  `package_id`,`package_country`,`ship_time`,`transport_id`,`transport_name`,`package_weight`,`final_shipping_fee`,`logistics_id`,`track_number`,`order_amount`,`purchase_amount`,`client_sku`,`quantity`,`operation_username`,`order_count`,`info_count`,`ship_date`,`update_token`,`handle_time`,`package_add_time`
    </sql>
    <select id="selectPackageInfo" resultMap="BaseResultMap" parameterType="com.upedge.oms.modules.pack.request.PackageInfoListRequest">
        select <include refid="Base_Column_List"/>
        from package_info
        <include refid="InfoList_Condition"/>
        order by ship_time desc
        <if test="pageNum != null and pageSize != null">
            limit #{fromNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="countPackageInfo" resultType="java.lang.Long" parameterType="com.upedge.oms.modules.pack.request.PackageInfoListRequest">
        select count(1)
        from package_info
        <include refid="InfoList_Condition"/>

    </select>

    <sql id="InfoList_Condition">
        <if test="t != null">
            where
            <trim prefix=" " suffix=" " suffixOverrides=" and ">
                1 = 1 and
                <if test="t.packageId != null">
                    package_id = #{t.packageId} and
                </if>
                <if test="t.logisticsId != null">
                    logistics_id = #{t.logisticsId} and
                </if>
                <if test="t.trackingNumber != null">
                    track_number = #{t.trackingNumber} and
                </if>
                <if test="t.shipDateStart != null and t.shipDateEnd != null">
                    ship_date between #{t.shipDateStart} and   #{t.shipDateEnd}
                </if>
            </trim>
        </if>
    </sql>

    <select id="selectPackageDataByDate" resultType="com.upedge.oms.modules.pack.entity.PackageDailyCount">
        select order_source_id,order_source_type,order_source_name,
        date(ship_time) as `dateDay`,
        count(DISTINCT pi.package_id) as `packageCount`, -- 包裹总数
        sum(order_count) as `packageOrderCount`, -- 包裹订单总数
        sum(purchase_amount) as `purchaseCostAmount`, -- 采购成本
        sum(final_shipping_fee) as `shippingFeeAmoung`, -- 运费
        sum(order_amount) as `purchaseOrderAmount`, -- 订单总销售额
        sum(poi.handle_time) as `handleTimeAmount`, -- 支付到发货的处理总时长(秒，同下)
        sum(package_ship_duration) as `packageShipDurationAmount`, -- 从包裹生成到发货的处理总时长
        sum(pay_package_duration) as `pay_package_duration_amount` -- 从支付到包裹生成的处理总时长
        from package_info pi
        inner join package_order_info poi
        on pi.package_id = poi.package_id
        where date(ship_time) between #{beginTime} and #{endTime}
        group by order_source_id,`dateDay`,pi.package_id,order_source_type,order_source_name
    </select>

    <select id="selectByPrimaryKey" parameterType="com.upedge.oms.modules.pack.entity.PackageInfo"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from package_info
        where package_id = #{packageId}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="com.upedge.oms.modules.pack.entity.PackageInfo">
        delete from package_info
        where package_id = #{packageId}
    </delete>

    <update id="updateByPrimaryKeySelective" parameterType="com.upedge.oms.modules.pack.entity.PackageInfo">
        update package_info
        <set>
            <if test="packageCountry != null">
                package_country = #{packageCountry},
            </if>
            <if test="shipTime != null">
                ship_time = #{shipTime},
            </if>
            <if test="transportId != null">
                transport_id = #{transportId},
            </if>
            <if test="transportName != null">
                transport_name = #{transportName},
            </if>
            <if test="packageWeight != null">
                package_weight = #{packageWeight},
            </if>
            <if test="finalShippingFee != null">
                final_shipping_fee = #{finalShippingFee},
            </if>
            <if test="logisticsId != null">
                logistics_id = #{logisticsId},
            </if>
            <if test="trackNumber != null">
                track_number = #{trackNumber},
            </if>
            <if test="orderAmount != null">
                order_amount = #{orderAmount},
            </if>
            <if test="purchaseAmount != null">
                purchase_amount = #{purchaseAmount},
            </if>
            <if test="clientSku != null">
                client_sku = #{clientSku},
            </if>
            <if test="quantity != null">
                quantity = #{quantity},
            </if>
            <if test="operationUsername != null">
                operation_username = #{operationUsername},
            </if>
            <if test="orderCount != null">
                order_count = #{orderCount},
            </if>
            <if test="infoCount != null">
                info_count = #{infoCount},
            </if>
            <if test="shipDate != null">
                ship_date = #{shipDate},
            </if>
            <if test="updateToken != null">
                update_token = #{updateToken},
            </if>
            <if test="handleTime != null">
                handle_time = #{handleTime},
            </if>
            <if test="packageAddTime != null">
                package_add_time = #{packageAddTime},
            </if>
        </set>
        where package_id = #{packageId}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.upedge.oms.modules.pack.entity.PackageInfo">
        update package_info
        <set>
            package_id = #{packageId},
            package_country = #{packageCountry},
            ship_time = #{shipTime},
            transport_id = #{transportId},
            transport_name = #{transportName},
            package_weight = #{packageWeight},
            final_shipping_fee = #{finalShippingFee},
            logistics_id = #{logisticsId},
            track_number = #{trackNumber},
            order_amount = #{orderAmount},
            purchase_amount = #{purchaseAmount},
            client_sku = #{clientSku},
            quantity = #{quantity},
            operation_username = #{operationUsername},
            order_count = #{orderCount},
            info_count = #{infoCount},
            ship_date = #{shipDate},
            update_token = #{updateToken},
            handle_time = #{handleTime},
            package_add_time = #{packageAddTime},
        </set>
        where package_id = #{packageId}
    </update>

    <insert id="insert" keyColumn="package_id" keyProperty="packageId"
            parameterType="com.upedge.oms.modules.pack.entity.PackageInfo" useGeneratedKeys="true">
        insert into package_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            package_id,
            package_country,
            ship_time,
            transport_id,
            transport_name,
            package_weight,
            final_shipping_fee,
            logistics_id,
            track_number,
            order_amount,
            purchase_amount,
            client_sku,
            quantity,
            operation_username,
            order_count,
            info_count,
            ship_date,
            update_token,
            handle_time,
            package_add_time
        </trim>
        values (
        #{packageId},
        #{packageCountry},
        #{shipTime},
        #{transportId},
        #{transportName},
        #{packageWeight},
        #{finalShippingFee},
        #{logisticsId},
        #{trackNumber},
        #{orderAmount},
        #{purchaseAmount},
        #{clientSku},
        #{quantity},
        #{operationUsername},
        #{orderCount},
        #{infoCount},
        #{shipDate},
        #{updateToken},
        #{handleTime},
        #{packageAddTime}
        )
    </insert>

    <insert id="insertSelective" keyColumn="package_id" keyProperty="packageId"
            parameterType="com.upedge.oms.modules.pack.entity.PackageInfo" useGeneratedKeys="true">
        insert into package_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="packageId != null">
                package_id
            </if>
            <if test="packageCountry != null">
                package_country
            </if>
            <if test="shipTime != null">
                ship_time
            </if>
            <if test="transportId != null">
                transport_id
            </if>
            <if test="transportName != null">
                transport_name
            </if>
            <if test="packageWeight != null">
                package_weight
            </if>
            <if test="finalShippingFee != null">
                final_shipping_fee
            </if>
            <if test="logisticsId != null">
                logistics_id
            </if>
            <if test="trackNumber != null">
                track_number
            </if>
            <if test="orderAmount != null">
                order_amount
            </if>
            <if test="purchaseAmount != null">
                purchase_amount
            </if>
            <if test="clientSku != null">
                client_sku
            </if>
            <if test="quantity != null">
                quantity
            </if>
            <if test="operationUsername != null">
                operation_username
            </if>
            <if test="orderCount != null">
                order_count
            </if>
            <if test="infoCount != null">
                info_count
            </if>
            <if test="shipDate != null">
                ship_date
            </if>
            <if test="updateToken != null">
                update_token
            </if>
            <if test="handleTime != null">
                handle_time
            </if>
            <if test="packageAddTime != null">
                package_add_time
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="packageId != null">
                #{packageId}
            </if>
            <if test="packageCountry != null">
                #{packageCountry}
            </if>
            <if test="shipTime != null">
                #{shipTime}
            </if>
            <if test="transportId != null">
                #{transportId}
            </if>
            <if test="transportName != null">
                #{transportName}
            </if>
            <if test="packageWeight != null">
                #{packageWeight}
            </if>
            <if test="finalShippingFee != null">
                #{finalShippingFee}
            </if>
            <if test="logisticsId != null">
                #{logisticsId}
            </if>
            <if test="trackNumber != null">
                #{trackNumber}
            </if>
            <if test="orderAmount != null">
                #{orderAmount}
            </if>
            <if test="purchaseAmount != null">
                #{purchaseAmount}
            </if>
            <if test="clientSku != null">
                #{clientSku}
            </if>
            <if test="quantity != null">
                #{quantity}
            </if>
            <if test="operationUsername != null">
                #{operationUsername}
            </if>
            <if test="orderCount != null">
                #{orderCount}
            </if>
            <if test="infoCount != null">
                #{infoCount}
            </if>
            <if test="shipDate != null">
                #{shipDate}
            </if>
            <if test="updateToken != null">
                #{updateToken}
            </if>
            <if test="handleTime != null">
                #{handleTime}
            </if>
            <if test="packageAddTime != null">
                #{packageAddTime}
            </if>

        </trim>
    </insert>

    <insert id="insertByBatch" parameterType="java.util.List">
        insert into package_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            package_id,
            package_country,
            ship_time,
            transport_id,
            transport_name,
            package_weight,
            final_shipping_fee,
            logistics_id,
            track_number,
            order_amount,
            purchase_amount,
            client_sku,
            quantity,
            operation_username,
            order_count,
            info_count,
            ship_date,
            update_token,
            handle_time,
            package_add_time
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.packageId},
                #{item.packageCountry},
                #{item.shipTime},
                #{item.transportId},
                #{item.transportName},
                #{item.packageWeight},
                #{item.finalShippingFee},
                #{item.logisticsId},
                #{item.trackNumber},
                #{item.orderAmount},
                #{item.purchaseAmount},
                #{item.clientSku},
                #{item.quantity},
                #{item.operationUsername},
                #{item.orderCount},
                #{item.infoCount},
                #{item.shipDate},
                #{item.updateToken},
                #{item.handleTime},
                #{item.packageAddTime}
            </trim>
        </foreach>
    </insert>

    <sql id="Query_Condition">
        <if test="t != null">
            where
            <trim prefix=" " suffix=" " suffixOverrides=" and ">
                1 = 1 and
                <if test="t.packageId != null">
                    package_id = #{t.packageId} and
                </if>
                <if test="t.packageCountry != null">
                    package_country = #{t.packageCountry} and
                </if>
                <if test="t.shipTime != null">
                    ship_time = #{t.shipTime} and
                </if>
                <if test="t.transportId != null">
                    transport_id = #{t.transportId} and
                </if>
                <if test="t.transportName != null">
                    transport_name = #{t.transportName} and
                </if>
                <if test="t.packageWeight != null">
                    package_weight = #{t.packageWeight} and
                </if>
                <if test="t.finalShippingFee != null">
                    final_shipping_fee = #{t.finalShippingFee} and
                </if>
                <if test="t.logisticsId != null">
                    logistics_id = #{t.logisticsId} and
                </if>
                <if test="t.trackNumber != null">
                    track_number = #{t.trackNumber} and
                </if>
                <if test="t.orderAmount != null">
                    order_amount = #{t.orderAmount} and
                </if>
                <if test="t.purchaseAmount != null">
                    purchase_amount = #{t.purchaseAmount} and
                </if>
                <if test="t.clientSku != null">
                    client_sku = #{t.clientSku} and
                </if>
                <if test="t.quantity != null">
                    quantity = #{t.quantity} and
                </if>
                <if test="t.operationUsername != null">
                    operation_username = #{t.operationUsername} and
                </if>
                <if test="t.orderCount != null">
                    order_count = #{t.orderCount} and
                </if>
                <if test="t.infoCount != null">
                    info_count = #{t.infoCount} and
                </if>
                <if test="t.shipDate != null">
                    ship_date = #{t.shipDate} and
                </if>
                <if test="t.updateToken != null">
                    update_token = #{t.updateToken} and
                </if>
                <if test="t.handleTime != null">
                    handle_time = #{t.handleTime} and
                </if>
                <if test="t.packageAddTime != null">
                    package_add_time = #{t.packageAddTime} and
                </if>
            </trim>
        </if>
    </sql>

    <select id="select" parameterType="com.upedge.common.base.Page" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from package_info
        <include refid="Query_Condition"/>
        order by ship_time desc
        <if test="pageNum != null and pageSize != null">
            limit #{fromNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="count" parameterType="com.upedge.common.base.Page" resultType="java.lang.Long">
        select
        count(1)
        from package_info
        <include refid="Query_Condition"/>
    </select>

    <!--月包裹总数-->
    <select id="monthPackageCount" resultType="java.lang.Integer">
        select count(1) from package_info
        where  date(ship_time)>=#{startDay} and date(ship_time) &lt;= #{endDay}
    </select>

    <insert id="savePackageInfo" parameterType="java.util.List">
        insert into package_info(package_id,package_country,ship_time,
        transport_id,transport_name,package_weight,
        final_shipping_fee,track_number,order_amount,
        purchase_amount,client_sku,quantity,operation_username,order_count,
        info_count,ship_date,update_token,handle_time,logistics_id,package_add_time)
        values
        <foreach collection="list" item="item" index="index"
                 separator=",">
            (#{item.packageId,jdbcType=INTEGER},
            #{item.packageCountry,jdbcType=VARCHAR},
            #{item.shipTime,jdbcType=TIMESTAMP},
            #{item.transportId,jdbcType=INTEGER},
            #{item.transportName,jdbcType=VARCHAR},
            #{item.packageWeight,jdbcType=INTEGER},
            #{item.finalShippingFee,jdbcType=DECIMAL},
            #{item.trackNumber,jdbcType=VARCHAR},
            #{item.orderAmount,jdbcType=DECIMAL},
            #{item.purchaseAmount,jdbcType=DECIMAL},
            #{item.clientSku,jdbcType=VARCHAR},
            #{item.quantity,jdbcType=INTEGER},
            #{item.operationUsername,jdbcType=VARCHAR},
            #{item.orderCount,jdbcType=INTEGER},
            #{item.infoCount,jdbcType=INTEGER},
            #{item.shipDate,jdbcType=DATE},
            #{item.updateToken,jdbcType=VARCHAR},
            #{item.handleTime,jdbcType=BIGINT},
            #{item.logisticsId,jdbcType=VARCHAR},
            #{item.packageAddTime,jdbcType=TIMESTAMP})
        </foreach>
        ON DUPLICATE KEY UPDATE
        package_country = VALUES(package_country),
        ship_time = VALUES(ship_time),
        transport_id = VALUES(transport_id),
        transport_name = VALUES(transport_name),
        package_weight = VALUES(package_weight),
        final_shipping_fee = VALUES(final_shipping_fee),
        logistics_id=VALUES(logistics_id),
        track_number = VALUES(track_number),
        order_amount = VALUES(order_amount),
        purchase_amount = VALUES(purchase_amount),
        client_sku = VALUES(client_sku),
        quantity = VALUES(quantity),
        operation_username = VALUES(operation_username),
        order_count = VALUES(order_count),
        info_count = VALUES(info_count),
        ship_date = VALUES(ship_date),
        update_token = VALUES(update_token),
        handle_time = VALUES(handle_time),
        package_add_time = VALUES(package_add_time)
    </insert>

    <delete id="deletePackageInfo">
        delete from package_info where
        date(ship_time)>=#{startDay} and date(ship_time) &lt;=#{endDay} and update_token!=#{updateToken}
    </delete>

    <select id="packageMonthData" resultType="com.upedge.oms.modules.pack.vo.PackageData">
        select count(1) as packageCount,
		date(ship_time) as dayDate
		from package_info where
		date(ship_time) &lt;= #{endDay} and date(ship_time) >= #{startDay}
		GROUP BY date(ship_time)
    </select>
    <select id="selectList" resultType="com.upedge.oms.modules.pack.entity.PackageInfo">
        select
        <include refid="Base_Column_List"/>
        from package_info
        <include refid="Query_Condition"/>
        <if test="t.shipDateStart != null">
            and ship_date &gt;= #{t.shipDateStart} and ship_date &lt;= #{t.shipDateEnd}
        </if>
        order by ship_time desc
        <if test="pageNum != null and pageSize != null">
            limit #{fromNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
        </if>
    </select>
    <select id="selectListCount" resultType="java.lang.Long">
        select
        count(1)
        from package_info
        <include refid="Query_Condition"/>
        <if test="t.shipDateStart != null">
            and ship_date &gt;= #{t.shipDateStart} and ship_date &lt;= #{t.shipDateEnd}
        </if>
    </select>
    <select id="countNormalOrderBySource" resultType="java.lang.Integer">
        select count(1) from
        (select  DISTINCT client_order_code
        from package_order_info
        <where>
            <if test="orderSourceId != null and orderSourceId !=-1" >order_source_id=#{orderSourceId} and</if>
             ship_date>=#{startDay} and ship_date &lt;=#{endDay}
        </where>
        ) poi
        left join package_order po on po.client_order_code=poi.client_order_code
        left join `order` apo on apo.id=poi.client_order_code
        where  po.ship_date>=#{startDay} and po.ship_date &lt;=#{endDay}  and apo.order_type in(0,2,3)
    </select>
    <select id="countAgainOrderBySource" resultType="java.lang.Integer">
        select count(1) from
        (select  DISTINCT client_order_code
        from package_order_info
        <where>
            <if test="orderSourceId != null and orderSourceId !=-1" > order_source_id=#{orderSourceId} and</if>
             ship_date>=#{startDay} and ship_date &lt;=#{endDay}
        </where>
        ) poi
        left join package_order po on po.client_order_code=poi.client_order_code
        left join `order` apo on apo.id=poi.client_order_code
        where po.ship_date>=#{startDay} and po.ship_date &lt;=#{endDay}  and apo.order_type=1
    </select>
    <select id="countWholeSaleOrderBySource" resultType="java.lang.Integer">
        select count(1) from
        (select  DISTINCT client_order_code
        from package_order_info
        <where>
            <if test="orderSourceId != null and orderSourceId !=-1" > order_source_id=#{orderSourceId} and</if>
            ship_date>=#{startDay} and ship_date &lt;=#{endDay}
        </where>
        ) poi
        left join package_order po on po.client_order_code=poi.client_order_code
        left join wholesale_order wo on wo.id=poi.client_order_code
        where po.ship_date>=#{startDay} and po.ship_date &lt;=#{endDay} and wo.id is not NULL
    </select>

    <select id="countPackageOrderBySource" resultType="java.lang.Integer">
        select count(1) from
        (select  DISTINCT client_order_code
        from package_order_info
        <where>
            <if test="orderSourceId != null and orderSourceId !=-1" > order_source_id=#{orderSourceId}  and</if>
            ship_date>=#{startDay} and ship_date &lt;=#{endDay}
        </where>
        ) poi
        left join package_order po on po.client_order_code=poi.client_order_code
        where po.ship_date>=#{startDay} and po.ship_date &lt;=#{endDay}
    </select>

    <select id="totalNormalWholeSaleOrderAsalesBySource" resultType="java.math.BigDecimal">
        select sum(IFNULL(apo.product_amount,0)+IFNULL(apo.ship_price,0)+IFNULL(apo.vat_amount,0)) from
        (select  DISTINCT client_order_code
        from package_order_info
        <where>
            <if test="orderSourceId != null and orderSourceId !=-1" > order_source_id=#{orderSourceId} and</if>
            ship_date>=#{startDay} and ship_date &lt;=#{endDay}
        </where>
        ) poi
        left join package_order po on po.client_order_code=poi.client_order_code
        left join `order` apo on apo.id=poi.client_order_code
        where po.ship_date>=#{startDay} and po.ship_date &lt;=#{endDay}
    </select>

    <select id="monthWholeSaleRefundTrackingNoAmount" resultType="java.math.BigDecimal">
        select IFNULL(sum(refund_amount),0)  as amount  from wholesale_refund where
        state=1 and tracking_state=0
        <if test="orderSourceId != null and orderSourceId !=-1" >
           and  order_source_id=#{orderSourceId}
        </if>
        and  date(update_time)>=#{startDay} and date(update_time) &lt;=#{endDay}
    </select>

    <select id="monthRefundTrackingNoAmount" resultType="java.math.BigDecimal">
        select IFNULL(sum(refund_amount),0)  as amount  from order_refund where
        state=1 and tracking_state=0
        <if test="orderSourceId != null and orderSourceId !=-1" >
            and  order_source_id=#{orderSourceId}
        </if>
        and date(update_time)>=#{startDay} and date(update_time) &lt;=#{endDay}
    </select>
    <!--当月确认已发货批发订单退款金额 按照订单赛盒渠道统计-->
    <select id="monthWholeSaleRefundTrackingYesAmountByOrderSourceId" resultType="java.math.BigDecimal">
        select IFNULL(sum(refund_amount),0)  as amount  from wholesale_refund where
        state=1 and tracking_state=1
        <if test="orderSourceId != null and orderSourceId !=-1" >
            and  order_source_id=#{orderSourceId}
        </if>
        and  date(update_time)>=#{startDay} and date(update_time) &lt;=#{endDay}
    </select>
    <!--当月确认已发货订单退款金额  按照订单赛盒渠道统计-->
    <select id="monthRefundTrackingYesAmountByOrderSourceId" resultType="java.math.BigDecimal">
        select IFNULL(sum(refund_amount),0)  as amount  from order_refund where
        state=1 and tracking_state=1
        <if test="orderSourceId != null and orderSourceId !=-1" >
            and  order_source_id=#{orderSourceId}
        </if>
        and date(update_time)>=#{startDay} and date(update_time) &lt;=#{endDay}
    </select>
    <!--当月补发包裹物流成本-->
    <select id="totalPackageAgainOrderLogisticsCost" resultType="java.math.BigDecimal">
        select
        IFNULL(sum(pi.final_shipping_fee),0) as amount
        from
        (select DISTINCT package_id from
        (select  client_order_code,package_id
        from package_order_info
                 <where>
                     <if test="orderSourceId != null and orderSourceId !=-1" >order_source_id=#{orderSourceId} and</if>
                      ship_date>=#{startDay} and ship_date &lt;=#{endDay}
                 </where>
        ) poi
        left join package_order po on po.client_order_code=poi.client_order_code
        left join `order` apo on apo.id=poi.client_order_code
        where
     	po.ship_date>=#{startDay} and po.ship_date &lt;=#{endDay}
        and apo.order_type=1) p
        left join package_info pi on pi.package_id=p.package_id;
    </select>
    <!--当月补发包裹采购成本-->
    <select id="totalPackageAgainOrderPurchaseCost" resultType="java.math.BigDecimal">
        select
        IFNULL(sum(pi.purchase_amount),0)
        from
        (select DISTINCT package_id from
        (select  client_order_code,package_id
        from package_order_info
             <where>
                 <if test="orderSourceId != null and orderSourceId !=-1" >order_source_id=#{orderSourceId} and</if>
                  ship_date>=#{startDay} and ship_date &lt;=#{endDay}
             </where>
        ) poi
        left join package_order po on po.client_order_code=poi.client_order_code
        left join `order` apo on apo.id=poi.client_order_code
        where
        po.ship_date>=#{startDay} and po.ship_date &lt;=#{endDay}  and
        apo.order_type=1) p
        left join package_info pi on pi.package_id=p.package_id;
    </select>
    <!--当月发货包裹订单物流成本-->
    <select id="totalPackageLogisticsCost" resultType="java.math.BigDecimal">
        select IFNULL(sum(pi.final_shipping_fee),0) from
        (select  DISTINCT package_id
        from package_order_info
                 <where>
                     <if test="orderSourceId != null and orderSourceId !=-1" >order_source_id=#{orderSourceId}</if>
                 </where>
        ) poi
        left join package_info pi on pi.package_id=poi.package_id
                 where date(pi.ship_time)>=#{startDay} and date(pi.ship_time) &lt;=#{endDay}
    </select>
    <!--当月发货包裹订单采购成本-->
    <select id="totalPackagePurchaseCost" resultType="java.math.BigDecimal">
        select sum(IFNULL(pi.purchase_amount,0)) from
        (select  DISTINCT package_id
        from package_order_info
        <where>
            <if test="orderSourceId != null and orderSourceId !=-1" >order_source_id=#{orderSourceId}</if>
        </where>
        ) poi
        left join package_info pi on pi.package_id=poi.package_id
        where date(pi.ship_time)>=#{startDay} and date(pi.ship_time) &lt;=#{endDay}
    </select>
    <!--当月发货包裹订单销售额-->
    <select id="totalNormalOrderAsalesBySource" resultType="java.math.BigDecimal">
        select sum(IFNULL(apo.product_amount,0)+IFNULL(apo.ship_price,0)+IFNULL(apo.vat_amount,0)) from
        (select  DISTINCT client_order_code
        from package_order_info
                 <where>
                     <if test="orderSourceId != null and orderSourceId !=-1" >order_source_id=#{orderSourceId} and</if>
                      ship_date>=#{startDay} and ship_date &lt;=#{endDay}
                 </where>
        ) poi
        left join package_order po on po.client_order_code=poi.client_order_code
        left join `order` apo on apo.id=poi.client_order_code
                 where po.ship_date>=#{startDay} and po.ship_date &lt;=#{endDay}
    </select>
    <select id="packageMonthAmount" resultType="com.upedge.oms.modules.pack.vo.PackageData">
        select date(pi.ship_time) as dayDate,
        round(sum(IFNULL(pi.final_shipping_fee,0)+IFNULL(pi.purchase_amount,0)),2) packageAmount from
        (
        select  DISTINCT package_id
        from package_order_info
        <where>
            <if test="orderSourceId != null and orderSourceId !=-1" >order_source_id=#{orderSourceId}  and </if>
            ship_date>=#{startDay} and ship_date &lt;=#{endDay}
        </where>
        ) poi
        left join package_info pi on pi.package_id=poi.package_id
        where
        date(pi.ship_time)>=#{startDay} and date(pi.ship_time)&lt;=#{endDay}
        group by date(pi.ship_time)
    </select>
    <select id="packageMonthOrderAmount" resultType="com.upedge.oms.modules.pack.vo.PackageData">
        select po.ship_date as dayDate,
        round(sum(IFNULL(apo.product_amount,0)+IFNULL(apo.ship_price,0)) * #{usdRate},2 ) as orderAmount
        from (
        select  DISTINCT client_order_code
        from package_order_info
                 <where>
                     <if test="orderSourceId != null and orderSourceId !=-1" >order_source_id=#{orderSourceId} and</if>
                      ship_date>=#{startDay} and ship_date &lt;=#{endDay}
                 </where>
        ) poi
        left join package_order po on po.client_order_code=poi.client_order_code
        left join `order` apo on apo.id=poi.client_order_code
        group by po.ship_date;
    </select>
    <select id="packageMonthWholeSaleOrderAmount" resultType="com.upedge.oms.modules.pack.vo.PackageData">
        select po.ship_date as dayDate,
        round(sum(IFNULL(wo.product_amount,0)+IFNULL(wo.ship_price,0))*#{usdRate},2) as orderAmount
        from (
        select DISTINCT client_order_code
        from package_order_info
                 <where>
                     <if test="orderSourceId != null and orderSourceId !=-1" >order_source_id=#{orderSourceId}</if>
                     and ship_date>=#{startDay} and ship_date &lt;=#{endDay}
                 </where>
        ) poi
        left join package_order po on po.client_order_code=poi.client_order_code
        left join wholesale_order wo on wo.id=poi.client_order_code
                 where po.ship_date>=#{startDay} and po.ship_date &lt;=#{endDay}
        group by po.ship_date;
    </select>
    <select id="listNormalOrderAsalesBySource" resultType="com.upedge.oms.modules.statistics.vo.OrderSaleVo">
        select poi.client_order_code as id,IFNULL(apo.product_amount,0)+IFNULL(apo.ship_price,0)+IFNULL(apo.vat_amount,0) as amount from
        (select  DISTINCT client_order_code
        from package_order_info
                 <where>
                     ship_date>=#{startDay} and ship_date &lt;=#{endDay}
                     <if test="orderSourceId != null and orderSourceId !=-1" >and order_source_id=#{orderSourceId}</if>
                 </where>
        ) poi
        left join package_order po on po.client_order_code=poi.client_order_code
        left join `order` apo on apo.id=poi.client_order_code
                 where po.ship_date>=#{startDay} and po.ship_date &lt;=#{endDay}
    </select>
    <select id="exportWholesaleOrderSale" resultType="com.upedge.oms.modules.statistics.vo.OrderSaleVo">
        select wo.id as id,IFNULL(wo.product_amount,0)+IFNULL(wo.ship_price,0)+IFNULL(wo.vat_amount,0) as amount from
        (select  DISTINCT client_order_code
        from package_order_info
                 <where>
                      ship_date>=#{startDay} and ship_date &lt;=#{endDay}
                     <if test="orderSourceId != null and orderSourceId !=-1" >and order_source_id=#{orderSourceId}</if>
                 </where>
        ) poi
        left join package_order po on po.client_order_code=poi.client_order_code
        left join wholesale_order wo on wo.id=poi.client_order_code
                 where po.ship_date>=#{startDay} and po.ship_date &lt;=#{endDay} and wo.id is not null
    </select>
    <select id="listPackageIdNoTrackNumber" resultType="com.upedge.oms.modules.pack.entity.PackageInfo"
    parameterType="com.upedge.common.base.Page">
        select  <include refid="Base_Column_List"/>
        from
        (select <include refid="Base_Column_List"/>
        from package_info where track_number = ''
        UNION  ALL
        select <include refid="Base_Column_List"/>
        from package_info where track_number IS NULL) tab
        <if test="boundary != null and boundary!=''">
            and ${boundary}
        </if>
        <if test="orderBy == null or orderBy ==''">
            order by ship_time desc
        </if>
        <if test="orderBy != null and orderBy !=''">
            order by   ${orderBy}
        </if>
        <if test="pageNum != null and pageSize != null ">
            <if test="boundary == null or boundary==''">
                limit #{fromNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
            </if>
            <if test="boundary != null and boundary!=''">
                limit #{pageSize,jdbcType=INTEGER}
            </if>
        </if>
    </select>

</mapper>
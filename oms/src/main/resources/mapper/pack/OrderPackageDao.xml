<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.upedge.oms.modules.pack.dao.OrderPackageDao">
    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.upedge.oms.modules.pack.entity.OrderPackage" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="customerId" column="customer_id"/>
        <result property="storeId" column="store_id"/>
        <result property="orgPath" column="org_path"/>
        <result property="packageNo" column="package_no"/>
        <result property="orderId" column="order_id"/>
        <result property="waveNo" column="wave_no"/>
        <result property="trackingCode" column="tracking_code"/>
        <result property="logisticsOrderNo" column="logistics_order_no"/>
        <result property="trackingCompany" column="tracking_company"/>
        <result property="trackingMethodName" column="tracking_method_name"/>
        <result property="trackingMethodCode" column="tracking_method_code"/>
        <result property="platId" column="plat_id"/>
        <result property="packageState" column="package_state"/>
        <result property="createTime" column="create_time"/>
        <result property="sendTime" column="send_time"/>
        <result property="receiveTime" column="receive_time"/>
        <result property="isUploadStore" column="is_upload_store"/>
    </resultMap>

    <sql id="Base_Column_List">
        `id`
                ,`customer_id`,`store_id`,`org_path`,`package_no`,`order_id`,`wave_no`,ifnull(`tracking_code`,'') as `tracking_code`,`logistics_order_no`,
        `tracking_company`,`tracking_method_name`,`tracking_method_code`,`plat_id`,`package_state`,`create_time`,`send_time`,
        `receive_time`,`is_upload_store`
    </sql>

    <select id="selectByPrimaryKey" parameterType="com.upedge.oms.modules.pack.entity.OrderPackage"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_package
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="com.upedge.oms.modules.pack.entity.OrderPackage">
        delete
        from order_package
        where id = #{id}
    </delete>

    <update id="updateByPrimaryKeySelective" parameterType="com.upedge.oms.modules.pack.entity.OrderPackage">
        update order_package
        <set>
            <if test="customerId != null">
                customer_id = #{customerId},
            </if>
            <if test="storeId != null">
                store_id = #{storeId},
            </if>
            <if test="orgPath != null">
                org_path = #{orgPath},
            </if>
            <if test="packageNo != null">
                package_no = #{packageNo},
            </if>
            <if test="orderId != null">
                order_id = #{orderId},
            </if>
            <if test="waveNo != null">
                wave_no = #{waveNo},
            </if>
            <if test="trackingCode != null">
                tracking_code = #{trackingCode},
            </if>
            <if test="logisticsOrderNo != null">
                logistics_order_no = #{logisticsOrderNo},
            </if>
            <if test="trackingCompany != null">
                tracking_company = #{trackingCompany},
            </if>
            <if test="trackingMethodName != null">
                tracking_method_name = #{trackingMethodName},
            </if>
            <if test="trackingMethodCode != null">
                tracking_method_code = #{trackingMethodCode},
            </if>
            <if test="platId != null">
                plat_id = #{platId},
            </if>
            <if test="packageState != null">
                package_state = #{packageState},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="sendTime != null">
                send_time = #{sendTime},
            </if>
            <if test="receiveTime != null">
                receive_time = #{receiveTime},
            </if>
            <if test="isUploadStore != null">
                is_upload_store = #{isUploadStore},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.upedge.oms.modules.pack.entity.OrderPackage">
        update order_package
        <set>
            id = #{id},
            customer_id = #{customerId},
            store_id = #{storeId},
            org_path = #{orgPath},
            package_no = #{packageNo},
            order_id = #{orderId},
            wave_no = #{waveNo},
            tracking_code = #{trackingCode},
            logistics_order_no = #{logisticsOrderNo},
            tracking_company = #{trackingCompany},
            tracking_method_name = #{trackingMethodName},
            tracking_method_code = #{trackingMethodCode},
            plat_id = #{platId},
            package_state = #{packageState},
            create_time = #{createTime},
            send_time = #{sendTime},
            receive_time = #{receiveTime},
        </set>
        where id = #{id}
    </update>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.upedge.oms.modules.pack.entity.OrderPackage"
            useGeneratedKeys="true">
        insert into order_package
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            customer_id,
            store_id,
            org_path,
            package_no,
            order_id,
            wave_no,
            tracking_code,
            logistics_order_no,
            tracking_company,
            tracking_method_name,
            tracking_method_code,
            plat_id,
            package_state,
            create_time,
            send_time,
            receive_time
        </trim>
        values (
        #{id},
        #{customerId},
        #{storeId},
        #{orgPath},
        #{packageNo},
        #{orderId},
        #{waveNo},
        #{trackingCode},
        #{logisticsOrderNo},
        #{trackingCompany},
        #{trackingMethodName},
        #{trackingMethodCode},
        #{platId},
        #{packageState},
        #{createTime},
        #{sendTime},
        #{receiveTime}
        )
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.upedge.oms.modules.pack.entity.OrderPackage" useGeneratedKeys="true">
        insert into order_package
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id
            </if>
            <if test="customerId != null">
                customer_id
            </if>
            <if test="storeId != null">
                store_id
            </if>
            <if test="orgPath != null">
                org_path
            </if>
            <if test="packageNo != null">
                package_no
            </if>
            <if test="orderId != null">
                order_id
            </if>
            <if test="waveNo != null">
                wave_no
            </if>
            <if test="trackingCode != null">
                tracking_code
            </if>
            <if test="logisticsOrderNo != null">
                logistics_order_no
            </if>
            <if test="trackingCompany != null">
                tracking_company
            </if>
            <if test="trackingMethodName != null">
                tracking_method_name
            </if>
            <if test="trackingMethodCode != null">
                tracking_method_code
            </if>
            <if test="platId != null">
                plat_id
            </if>
            <if test="packageState != null">
                package_state
            </if>
            <if test="createTime != null">
                create_time
            </if>
            <if test="sendTime != null">
                send_time
            </if>
            <if test="receiveTime != null">
                receive_time
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id}
            </if>
            <if test="customerId != null">
                #{customerId}
            </if>
            <if test="storeId != null">
                #{storeId}
            </if>
            <if test="orgPath != null">
                #{orgPath}
            </if>
            <if test="packageNo != null">
                #{packageNo}
            </if>
            <if test="orderId != null">
                #{orderId}
            </if>
            <if test="waveNo != null">
                #{waveNo}
            </if>
            <if test="trackingCode != null">
                #{trackingCode}
            </if>
            <if test="logisticsOrderNo != null">
                #{logisticsOrderNo}
            </if>
            <if test="trackingCompany != null">
                #{trackingCompany}
            </if>
            <if test="trackingMethodName != null">
                #{trackingMethodName}
            </if>
            <if test="trackingMethodCode != null">
                #{trackingMethodCode}
            </if>
            <if test="platId != null">
                #{platId}
            </if>
            <if test="packageState != null">
                #{packageState}
            </if>
            <if test="createTime != null">
                #{createTime}
            </if>
            <if test="sendTime != null">
                #{sendTime}
            </if>
            <if test="receiveTime != null">
                #{receiveTime}
            </if>
        </trim>
    </insert>

    <insert id="insertByBatch" parameterType="java.util.List">
        insert into order_package
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            customer_id,
            store_id,
            org_path,
            package_no,
            order_id,
            wave_no,
            tracking_code,
            logistics_order_no,
            tracking_company,
            tracking_method_name,
            tracking_method_code,
            plat_id,
            package_state,
            create_time,
            send_time,
            receive_time
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.id},
                #{item.customerId},
                #{item.storeId},
                #{item.orgPath},
                #{item.packageNo},
                #{item.orderId},
                #{item.waveNo},
                #{item.trackingCode},
                #{item.logisticsOrderNo},
                #{item.trackingCompany},
                #{item.trackingMethodName},
                #{item.trackingMethodCode},
                #{item.platId},
                #{item.packageState},
                #{item.createTime},
                #{item.sendTime},
                #{item.receiveTime}
            </trim>
        </foreach>
    </insert>

    <sql id="Query_Condition">
        <if test="t != null">
            where
            <trim prefix=" " suffix=" " suffixOverrides=" and ">
                1 = 1 and
                <if test="t.id != null">
                    id = #{t.id} and
                </if>
                <if test="t.customerId != null">
                    customer_id = #{t.customerId} and
                </if>
                <if test="t.storeId != null">
                    store_id = #{t.storeId} and
                </if>
                <if test="t.orgPath != null">
                    org_path = #{t.orgPath} and
                </if>
                <if test="t.packageNo != null">
                    package_no = #{t.packageNo} and
                </if>
                <if test="t.orderId != null">
                    order_id = #{t.orderId} and
                </if>
                <if test="t.waveNo != null">
                    wave_no = #{t.waveNo} and
                </if>
                <if test="t.trackingCode != null">
                    tracking_code = #{t.trackingCode} and
                </if>
                <if test="t.logisticsOrderNo != null">
                    logistics_order_no = #{t.logisticsOrderNo} and
                </if>
                <if test="t.trackingCompany != null">
                    tracking_company = #{t.trackingCompany} and
                </if>
                <if test="t.trackingMethodName != null">
                    tracking_method_name = #{t.trackingMethodName} and
                </if>
                <if test="t.trackingMethodCode != null">
                    tracking_method_code = #{t.trackingMethodCode} and
                </if>
                <if test="t.platId != null">
                    plat_id = #{t.platId} and
                </if>
                <if test="t.packageState != null">
                    package_state = #{t.packageState} and
                </if>
                <if test="t.createTime != null">
                    create_time = #{t.createTime} and
                </if>
                <if test="t.sendTime != null">
                    send_time = #{t.sendTime} and
                </if>
                <if test="t.receiveTime != null">
                    receive_time = #{t.receiveTime} and
                </if>
            </trim>
        </if>
    </sql>

    <select id="select" parameterType="com.upedge.common.base.Page" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_package
        <include refid="Query_Condition"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="pageNum != null and pageSize != null">
            limit #{fromNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="count" parameterType="com.upedge.common.base.Page" resultType="java.lang.Long">
        select
        count(1)
        from order_package
        <include refid="Query_Condition"/>
    </select>

    <select id="selectByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_package
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="selectByOrderId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_package
        where order_id = #{orderId}
    </select>

    <select id="selectByTrackingCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_package
        where tracking_code = #{trackingCode}
    </select>

    <update id="revokePackageById">
        update order_package
        set package_state = '-1',
            remark        = #{reason}
        where id = #{id}
          and package_state = '0'
    </update>

    <select id="selectByOrderIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_package
        where order_id in
        <foreach collection="orderIds" item="orderId" open="(" close=")" separator=",">
            #{orderId}
        </foreach>
    </select>

    <select id="selectByScanNo" resultMap="BaseResultMap">
        select t.*
        from (
        select
        <include refid="Base_Column_List"/>
        from order_package
        where id = #{scanNo}
        union
        select
        <include refid="Base_Column_List"/>
        from order_package
        where logistics_order_no = #{scanNo}
        union
        select
        <include refid="Base_Column_List"/>
        from order_package
        where tracking_code = #{scanNo}
        ) t
        limit 1
    </select>

    <select id="selectUploadStoreFailedPackages" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_package
        where package_state = '1'
        and is_upload_store = '0'
        order by create_time desc
        limit 500
    </select>

    <update id="restoreRevokedPackage">
        update order_package
        set package_state = '0'
        where id = #{id}
          and package_state = '-1';
    </update>

    <select id="selectExStockUnUploadPackages" resultMap="BaseResultMap">
        select DISTINCT op.*
        from order_package op
        inner join store_order_relate sor
        on op.order_id = sor.order_id
        where op.package_state = '1'
          and sor.fulfillment_status = '0'
        order by send_time desc
        limit 500
    </select>
</mapper>
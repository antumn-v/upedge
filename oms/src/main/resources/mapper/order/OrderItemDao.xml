<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.upedge.oms.modules.order.dao.OrderItemDao">
    <resultMap type="com.upedge.oms.modules.order.entity.OrderItem" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="storeOrderId" column="store_order_id"/>
        <result property="storeOrderItemId" column="store_order_item_id"/>
        <result property="storeVariantId" column="store_variant_id"/>
        <result property="adminVariantId" column="admin_variant_id"/>
        <result property="storeProductId" column="store_product_id"/>
        <result property="adminProductId" column="admin_product_id"/>
        <result property="storeVariantName" column="store_variant_name"/>
        <result property="storeVariantSku" column="store_variant_sku"/>
        <result property="storeProductTitle" column="store_product_title"/>
        <result property="storeVariantImage" column="store_variant_image"/>
        <result property="adminVariantImage" column="admin_variant_image"/>
        <result property="adminVariantSku" column="admin_variant_sku"/>
        <result property="usdPrice" column="usd_price"/>
        <result property="usdRate" column="usd_rate"/>
        <result property="cnyPrice" column="cny_price"/>
        <result property="quantity" column="quantity"/>
        <result property="dischargeQuantity" column="discharge_quantity"/>
        <result property="adminVariantWeight" column="admin_variant_weight"/>
        <result property="adminVariantVolume" column="admin_variant_volume"/>
        <result property="itemType" column="item_type"/>
        <result property="shippingId" column="shipping_id"/>
        <result property="quoteState" column="quote_state"/>
        <result property="originalQuantity" column="original_quantity"/>
        <result property="shippingWarehouse" column="shipping_warehouse"/>
        <result property="pickedQuantity" column="picked_quantity"/>
        <result property="lockedQuantity" column="locked_quantity"/>
        <result property="barcode" column="barcode"/>
    </resultMap>


    <resultMap type="com.upedge.oms.modules.order.vo.AppOrderItemVo" id="AppOrderItemVo">
        <result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="storeOrderId" column="store_order_id"/>
        <result property="storeVariantId" column="store_variant_id"/>
        <result property="storeProductId" column="store_product_id"/>
        <result property="adminProductId" column="admin_product_id"/>
        <result property="storeVariantName" column="store_variant_name"/>
        <result property="storeVariantSku" column="store_variant_sku"/>
        <result property="adminVariantImage" column="admin_variant_image"/>
        <result property="adminVariantSku" column="admin_variant_sku"/>
        <result property="storeProductTitle" column="store_product_title"/>
        <result property="price" column="usd_price"/>
        <result property="adminVariantWeight" column="admin_variant_weight"/>
        <result property="adminVariantVolume" column="admin_variant_volume"/>
        <result property="quantity" column="quantity"/>
        <result property="dischargeQuantity" column="discharge_quantity"/>
        <result property="itemType" column="item_type"/>
        <result property="pickedQuantity" column="picked_quantity"/>
        <result property="barcode" column="barcode"/>
    </resultMap>

    <resultMap type="com.upedge.oms.modules.order.vo.OrderIdItemsVo" id="OrderIdItemsVo">
        <result property="orderId" column="order_id"/>
        <result property="storeOrderId" column="store_order_id"/>
        <collection property="itemVos" ofType="com.upedge.oms.modules.order.vo.AppOrderItemVo">
            <result property="id" column="id"/>
            <result property="orderId" column="order_id"/>
            <result property="storeOrderId" column="store_order_id"/>
            <result property="storeProductId" column="store_product_id"/>
            <result property="adminProductId" column="admin_product_id"/>
            <result property="storeVariantName" column="store_variant_name"/>
            <result property="storeVariantSku" column="store_variant_sku"/>
            <result property="adminVariantImage" column="admin_variant_image"/>
            <result property="storeProductTitle" column="store_product_title"/>
            <result property="price" column="usd_price"/>
            <result property="adminVariantWeight" column="admin_variant_weight"/>
            <result property="adminVariantVolume" column="admin_variant_volume"/>
            <result property="quantity" column="quantity"/>
            <result property="dischargeQuantity" column="discharge_quantity"/>
            <result property="itemType" column="item_type"/>
        </collection>
    </resultMap>

    <resultMap type="com.upedge.oms.modules.stock.entity.CustomerStockRecord" id="StockRecord">
        <result property="customerId" column="customer_id"/>
        <result property="productId" column="product_id"/>
        <result property="variantId" column="variant_id"/>
        <result property="warehouseCode" column="warehouse_code"/>
        <result property="relateId" column="relate_id"/>
        <result property="type" column="type"/>
        <result property="orderType" column="order_type"/>
        <result property="quantity" column="quantity"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="variantImage" column="variant_image"/>
        <result property="variantSku" column="variant_sku"/>
        <result property="variantName" column="variant_name"/>
    </resultMap>

    <resultMap type="com.upedge.oms.modules.order.vo.AppStoreOrderVo" id="OrderRelateItems">
        <result property="storeOrderId" column="store_order_id"/>
        <result property="platOrderCreateTime" column="plat_order_create_time"/>
        <result property="platOrderName" column="plat_order_name"/>
        <result property="financialStatus" column="financial_status"/>
        <result property="fulfillmentStatus" column="fulfillment_status"/>
        <result property="platOrderCreateTime" column="plat_order_create_time"/>
        <result property="orderCustomerName" column="order_customer_name"/>
        <result property="orderId" column="order_id"/>
        <collection ofType="com.upedge.oms.modules.order.vo.AppOrderItemVo" property="itemVos">
            <result property="id" column="itemId"/>
            <result property="orderId" column="order_id"/>
            <result property="adminProductId" column="admin_product_id"/>
            <result property="adminVariantId" column="admin_variant_id"/>
            <result property="storeVariantName" column="store_variant_name"/>
            <result property="storeVariantSku" column="store_variant_sku"/>
            <result property="storeVariantImage" column="store_variant_image"/>
            <result property="adminVariantImage" column="admin_variant_image"/>
            <result property="storeProductTitle" column="store_product_title"/>
            <result property="storeProductId" column="store_product_id"/>
            <result property="storeVariantId" column="store_variant_id"/>
            <result property="price" column="usd_price"/>
            <result property="adminVariantWeight" column="admin_variant_weight"/>
            <result property="adminVariantVolume" column="admin_variant_volume"/>
            <result property="quantity" column="quantity"/>
            <result property="dischargeQuantity" column="discharge_quantity"/>
            <result property="itemType" column="item_type"/>
            <result property="quoteState" column="quote_state"/>
        </collection>
    </resultMap>


    <sql id="Base_Column_List">
        `id`
                ,`order_id`,`store_order_id`,`store_order_item_id`,`store_variant_id`,
        `admin_variant_id`,`store_product_id`,`admin_product_id`,`picked_quantity`,
        `store_variant_name`,`store_variant_sku`,`store_product_title`,`store_variant_image`,
        `admin_variant_image`,`admin_variant_sku`,`usd_price`,`usd_rate`,`cny_price`,`barcode`,`locked_quantity`,
        `quantity`,`discharge_quantity`,`admin_variant_weight`,`admin_variant_volume`,`item_type`,`shipping_id`,`quote_state`,`original_quantity`
    </sql>

    <select id="selectItemByPaymentId" resultMap="BaseResultMap">
        select distinct oi.`id`,
                        `order_id`,
                        `store_order_item_id`,
                        `store_variant_id`,
                        `admin_variant_id`,
                        `admin_product_id`,
                        `store_variant_name`,
                        `store_variant_sku`,
                        `admin_variant_image`,
                        `store_product_title`,
                        `usd_price`,
                        `quantity`,
                        `discharge_quantity`,
                        `admin_variant_weight`,
                        `admin_variant_volume`,
                        `item_type`,
                        o.shipping_warehouse
        from `order` o
                     inner join order_item oi
                on oi.order_id = o.id
        where o.payment_id = #{paymentId}
    </select>

    <select id="selectStockRecordByPaymentId" resultMap="StockRecord">
        select cps.warehouse_code,
               cps.variant_image,
               cps.variant_sku,
               cps.variant_name,
               oi.discharge_quantity as `quantity`,
               '1'                   as `type`,
               '2'                   as `order_type`,
               oi.id                 as `relate_id`,
               cps.variant_id,
               cps.product_id,
               cps.customer_id
        from order_item oi
                     inner join `order` o
                on oi.order_id = o.id
                     left join customer_product_stock cps
                on oi.admin_variant_id = cps.variant_id
        where o.payment_id = #{paymentId}
          and cps.customer_id = #{customerId}
          and oi.discharge_quantity > '0'
          and o.pay_state = '1'
          and o.shipping_warehouse = cps.warehouse_code
    </select>

    <select id="selectStoreOrderIdById" resultType="java.lang.Long">
        select store_order_id
        from order_item
        where id = #{id}
    </select>

    <select id="selectCountQuantityByOrderId" resultType="java.lang.Integer">
        select sum(quantity)
        from order_item
        where order_id = #{orderId}
    </select>

    <select id="selectAppOrderItemByOrderId" resultMap="AppOrderItemVo" parameterType="java.lang.Long">
        select oi.id,
               oi.order_id,
               `admin_product_id`,
               `admin_variant_id`,
               `store_variant_name`,
               oi.store_order_id,
               `store_variant_sku`,
               `admin_variant_image`,
               `store_product_title`,
               `usd_price`,
               `quantity`,
               `discharge_quantity`,
               `admin_variant_weight`,
               `admin_variant_volume`,
               `admin_variant_sku`,
               store_variant_id,
               `store_variant_image`,
               `store_product_id`
        from order_item oi
        where oi.order_id = #{orderId}
    </select>

    <select id="selectAppOrderItemByOrderIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_item
        where order_id in
        <foreach collection="orderIds" item="orderId" open="(" close=")" separator=",">
            #{orderId}
        </foreach>
        and quote_state != '3'
    </select>

    <select id="selectAdminVariantDetailByOrder" resultType="com.upedge.common.model.product.VariantDetail">
        select `admin_variant_id`                    as `variantId`,
               `admin_product_id`                    as `productId`,
               (`quantity` * `admin_variant_weight`) as `weight`,
               (`quantity` * `admin_variant_volume`) as `volume`
        from order_item
        where order_id = #{orderId}
        group by `admin_variant_id`, `admin_product_id`, `quantity`, `admin_variant_weight`, `admin_variant_volume`
    </select>

    <select id="selectAdminVariantDetailByOrderIds" resultType="com.upedge.common.model.product.VariantDetail">
        select `admin_variant_id` as `variantId`,`admin_product_id` as `productId`,
        (`quantity` * `admin_variant_weight`) as `weight`,(`quantity` *`admin_variant_volume`) as `volume`
        from order_item
        where order_id in
        <foreach collection="orderIds" item="orderId" open="(" close=")" separator=",">
            #{orderId}
        </foreach>
        and admin_variant_id is not null
    </select>

    <select id="selectDischargeQuantityByPaymentId"
            resultType="com.upedge.oms.modules.order.vo.ItemDischargeQuantityVo">
        select oi.admin_variant_id        as `variantId`,
               sum(oi.discharge_quantity) as `dischargeQuantity`,
               o.shipping_warehouse
        from order_item oi
                     inner join `order` o
                on oi.order_id = o.id
        where o.payment_id = #{paymentId}
          and oi.discharge_quantity > '0'
          and oi.quantity > '0'
        group by oi.admin_variant_id, o.shipping_warehouse
    </select>

    <update id="updateDischargeQuantityByMap">
        <foreach collection="map" index="id" item="quantity" separator=";">
            update order_item
            set discharge_quantity = #{quantity}
            where id = #{id}
        </foreach>
    </update>

    <update id="updateAdminVariantByStoreVariantId">
        update order_item oi
                inner join `order` o
        on oi.order_id = o.id
                set admin_variant_id = #{r.variantId},
                        `admin_variant_weight` = #{r.weight},
                        `admin_variant_volume` = #{r.volume},
                        `admin_product_id` = #{r.productId},
                        `usd_price` = #{r.usdPrice},
                        `admin_variant_image` = #{r.image}
        where store_variant_id = #{storeVariantId}
          and o.pay_state = '0'
          and o.order_type != '1'
          and admin_variant_id is not null;
    </update>


    <update id="updateAdminVariantDetailByVariantId">
        update order_item oi
                inner join `order` o
        on oi.order_id = o.id
                set oi.${name} = #{value}
        where oi.admin_variant_id = #{adminVariantId}
          and o.pay_state
         &lt; '1'
    </update>

    <update id="updateUsdPriceByAdminVariantId">
        update order_item oi
                inner join `order` o
        on oi.order_id = o.id
                set oi.usd_price = #{usdPrice}
        where oi.admin_variant_id = #{adminVariantId}
          and o.pay_state = '0'
          and oi.quote_state = '6'
    </update>

    <update id="updateOrderIdByOrderIds">
        update order_item oi
        inner join `order` o
        on oi.order_id = o.id
        set oi.order_id = #{orderId}
        where oi.order_id in
        <foreach collection="orderIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        and o.pay_state = '0'
    </update>

    <update id="updateOrderIdByOrderItemMap">
        <foreach collection="orderItemMap" index="orderId" item="itemIds" separator=";">
            update order_item
            set order_id = #{orderId}
            where id in
            <foreach collection="itemIds" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </foreach>
    </update>


    <select id="selectByPrimaryKey" parameterType="com.upedge.oms.modules.order.entity.OrderItem"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_item
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="com.upedge.oms.modules.order.entity.OrderItem">
        delete
        from order_item
        where id = #{id}
    </delete>

    <update id="updateByPrimaryKeySelective" parameterType="com.upedge.oms.modules.order.entity.OrderItem">
        update order_item
        <set>
            <if test="orderId != null">
                order_id = #{orderId},
            </if>
            <if test="storeOrderId != null">
                store_order_id = #{storeOrderId},
            </if>
            <if test="storeOrderItemId != null">
                store_order_item_id = #{storeOrderItemId},
            </if>
            <if test="storeVariantId != null">
                store_variant_id = #{storeVariantId},
            </if>
            <if test="adminVariantId != null">
                admin_variant_id = #{adminVariantId},
            </if>
            <if test="storeProductId != null">
                store_product_id = #{storeProductId},
            </if>
            <if test="adminProductId != null">
                admin_product_id = #{adminProductId},
            </if>
            <if test="storeVariantName != null">
                store_variant_name = #{storeVariantName},
            </if>
            <if test="storeVariantSku != null">
                store_variant_sku = #{storeVariantSku},
            </if>
            <if test="storeProductTitle != null">
                store_product_title = #{storeProductTitle},
            </if>
            <if test="storeVariantImage != null">
                store_variant_image = #{storeVariantImage},
            </if>
            <if test="adminVariantImage != null">
                admin_variant_image = #{adminVariantImage},
            </if>
            <if test="adminVariantSku != null">
                admin_variant_sku = #{adminVariantSku},
            </if>
            <if test="usdPrice != null">
                usd_price = #{usdPrice},
            </if>
            <if test="usdRate != null">
                usd_rate = #{usdRate},
            </if>
            <if test="cnyPrice != null">
                cny_price = #{cnyPrice},
            </if>
            <if test="quantity != null">
                quantity = #{quantity},
            </if>
            <if test="dischargeQuantity != null">
                discharge_quantity = #{dischargeQuantity},
            </if>
            <if test="adminVariantWeight != null">
                admin_variant_weight = #{adminVariantWeight},
            </if>
            <if test="adminVariantVolume != null">
                admin_variant_volume = #{adminVariantVolume},
            </if>
            <if test="itemType != null">
                item_type = #{itemType},
            </if>
            <if test="shippingId != null">
                shipping_id = #{shippingId},
            </if>
            <if test="quoteState != null">
                quote_state = #{quoteState},
            </if>
            <if test="length != null">
                length = #{length},
            </if>
            <if test="width != null">
                width = #{width},
            </if>
            <if test="height != null">
                height = #{height},
            </if>
            <if test="originalQuantity != null">
                original_quantity = #{originalQuantity},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.upedge.oms.modules.order.entity.OrderItem">
        update order_item
        <set>
            id = #{id},
            order_id = #{orderId},
            store_order_id = #{storeOrderId},
            store_order_item_id = #{storeOrderItemId},
            store_variant_id = #{storeVariantId},
            admin_variant_id = #{adminVariantId},
            store_product_id = #{storeProductId},
            admin_product_id = #{adminProductId},
            store_variant_name = #{storeVariantName},
            store_variant_sku = #{storeVariantSku},
            store_product_title = #{storeProductTitle},
            store_variant_image = #{storeVariantImage},
            admin_variant_image = #{adminVariantImage},
            admin_variant_sku = #{adminVariantSku},
            usd_price = #{usdPrice},
            usd_rate = #{usdRate},
            cny_price = #{cnyPrice},
            quantity = #{quantity},
            discharge_quantity = #{dischargeQuantity},
            admin_variant_weight = #{adminVariantWeight},
            admin_variant_volume = #{adminVariantVolume},
            item_type = #{itemType},
            shipping_id = #{shippingId},
            quote_state = #{quoteState},
            length = #{length},
            width = #{width},
            height = #{height},
            original_quantity = #{originalQuantity},
        </set>
        where id = #{id}
    </update>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.upedge.oms.modules.order.entity.OrderItem"
            useGeneratedKeys="true">
        insert into order_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            order_id,
            store_order_id,
            store_order_item_id,
            store_variant_id,
            admin_variant_id,
            store_product_id,
            admin_product_id,
            store_variant_name,
            store_variant_sku,
            store_product_title,
            store_variant_image,
            admin_variant_image,
            admin_variant_sku,
            usd_price,
            usd_rate,
            cny_price,
            quantity,
            discharge_quantity,
            admin_variant_weight,
            admin_variant_volume,
            item_type,
            shipping_id,
            quote_state,
            length,
            width,
            height,
            original_quantity
        </trim>
        values (
        #{id},
        #{orderId},
        #{storeOrderId},
        #{storeOrderItemId},
        #{storeVariantId},
        #{adminVariantId},
        #{storeProductId},
        #{adminProductId},
        #{storeVariantName},
        #{storeVariantSku},
        #{storeProductTitle},
        #{storeVariantImage},
        #{adminVariantImage},
        #{adminVariantSku},
        #{usdPrice},
        #{usdRate},
        #{cnyPrice},
        #{quantity},
        #{dischargeQuantity},
        #{adminVariantWeight},
        #{adminVariantVolume},
        #{itemType},
        #{shippingId},
        #{quoteState},
        #{length},
        #{width},
        #{height},
        #{originalQuantity}
        )
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.upedge.oms.modules.order.entity.OrderItem" useGeneratedKeys="true">
        insert into order_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id
            </if>
            <if test="orderId != null">
                order_id
            </if>
            <if test="storeOrderId != null">
                store_order_id
            </if>
            <if test="storeOrderItemId != null">
                store_order_item_id
            </if>
            <if test="storeVariantId != null">
                store_variant_id
            </if>
            <if test="adminVariantId != null">
                admin_variant_id
            </if>
            <if test="storeProductId != null">
                store_product_id
            </if>
            <if test="adminProductId != null">
                admin_product_id
            </if>
            <if test="storeVariantName != null">
                store_variant_name
            </if>
            <if test="storeVariantSku != null">
                store_variant_sku
            </if>
            <if test="storeProductTitle != null">
                store_product_title
            </if>
            <if test="storeVariantImage != null">
                store_variant_image
            </if>
            <if test="adminVariantImage != null">
                admin_variant_image
            </if>
            <if test="adminVariantSku != null">
                admin_variant_sku
            </if>
            <if test="usdPrice != null">
                usd_price
            </if>
            <if test="usdRate != null">
                usd_rate
            </if>
            <if test="cnyPrice != null">
                cny_price
            </if>
            <if test="quantity != null">
                quantity
            </if>
            <if test="dischargeQuantity != null">
                discharge_quantity
            </if>
            <if test="adminVariantWeight != null">
                admin_variant_weight
            </if>
            <if test="adminVariantVolume != null">
                admin_variant_volume
            </if>
            <if test="itemType != null">
                item_type
            </if>
            <if test="shippingId != null">
                shipping_id
            </if>
            <if test="quoteState != null">
                quote_state
            </if>
            <if test="length != null">
                length
            </if>
            <if test="width != null">
                width
            </if>
            <if test="height != null">
                height
            </if>
            <if test="originalQuantity != null">
                original_quantity
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id}
            </if>
            <if test="orderId != null">
                #{orderId}
            </if>
            <if test="storeOrderId != null">
                #{storeOrderId}
            </if>
            <if test="storeOrderItemId != null">
                #{storeOrderItemId}
            </if>
            <if test="storeVariantId != null">
                #{storeVariantId}
            </if>
            <if test="adminVariantId != null">
                #{adminVariantId}
            </if>
            <if test="storeProductId != null">
                #{storeProductId}
            </if>
            <if test="adminProductId != null">
                #{adminProductId}
            </if>
            <if test="storeVariantName != null">
                #{storeVariantName}
            </if>
            <if test="storeVariantSku != null">
                #{storeVariantSku}
            </if>
            <if test="storeProductTitle != null">
                #{storeProductTitle}
            </if>
            <if test="storeVariantImage != null">
                #{storeVariantImage}
            </if>
            <if test="adminVariantImage != null">
                #{adminVariantImage}
            </if>
            <if test="adminVariantSku != null">
                #{adminVariantSku}
            </if>
            <if test="usdPrice != null">
                #{usdPrice}
            </if>
            <if test="usdRate != null">
                #{usdRate}
            </if>
            <if test="cnyPrice != null">
                #{cnyPrice}
            </if>
            <if test="quantity != null">
                #{quantity}
            </if>
            <if test="dischargeQuantity != null">
                #{dischargeQuantity}
            </if>
            <if test="adminVariantWeight != null">
                #{adminVariantWeight}
            </if>
            <if test="adminVariantVolume != null">
                #{adminVariantVolume}
            </if>
            <if test="itemType != null">
                #{itemType}
            </if>
            <if test="shippingId != null">
                #{shippingId}
            </if>
            <if test="quoteState != null">
                #{quoteState}
            </if>
            <if test="length != null">
                #{length}
            </if>
            <if test="width != null">
                #{width}
            </if>
            <if test="height != null">
                #{height}
            </if>
            <if test="originalQuantity != null">
                #{originalQuantity}
            </if>
        </trim>
    </insert>

    <insert id="insertByBatch" parameterType="java.util.List">
        insert into order_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            order_id,
            store_order_id,
            store_order_item_id,
            store_variant_id,
            admin_variant_id,
            store_product_id,
            admin_product_id,
            store_variant_name,
            store_variant_sku,
            store_product_title,
            store_variant_image,
            admin_variant_image,
            admin_variant_sku,
            usd_price,
            usd_rate,
            cny_price,
            quantity,
            discharge_quantity,
            admin_variant_weight,
            admin_variant_volume,
            item_type,
            shipping_id,
            quote_state,
            length,
            width,
            height,
            original_quantity,
            quote_scale,
            barcode
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.id},
                #{item.orderId},
                #{item.storeOrderId},
                #{item.storeOrderItemId},
                #{item.storeVariantId},
                #{item.adminVariantId},
                #{item.storeProductId},
                #{item.adminProductId},
                #{item.storeVariantName},
                #{item.storeVariantSku},
                #{item.storeProductTitle},
                #{item.storeVariantImage},
                #{item.adminVariantImage},
                #{item.adminVariantSku},
                #{item.usdPrice},
                #{item.usdRate},
                #{item.cnyPrice},
                #{item.quantity},
                #{item.dischargeQuantity},
                #{item.adminVariantWeight},
                #{item.adminVariantVolume},
                #{item.itemType},
                #{item.shippingId},
                #{item.quoteState},
                #{item.length},
                #{item.width},
                #{item.height},
                #{item.originalQuantity},
                #{item.quoteScale},
                #{item.barcode}
            </trim>
        </foreach>
    </insert>

    <sql id="Query_Condition">
        <if test="t != null">
            where
            <trim prefix=" " suffix=" " suffixOverrides=" and ">
                1 = 1 and
                <if test="t.id != null">
                    id = #{t.id} and
                </if>
                <if test="t.orderId != null">
                    order_id = #{t.orderId} and
                </if>
                <if test="t.storeOrderId != null">
                    store_order_id = #{t.storeOrderId} and
                </if>
                <if test="t.storeOrderItemId != null">
                    store_order_item_id = #{t.storeOrderItemId} and
                </if>
                <if test="t.storeVariantId != null">
                    store_variant_id = #{t.storeVariantId} and
                </if>
                <if test="t.adminVariantId != null">
                    admin_variant_id = #{t.adminVariantId} and
                </if>
                <if test="t.storeProductId != null">
                    store_product_id = #{t.storeProductId} and
                </if>
                <if test="t.adminProductId != null">
                    admin_product_id = #{t.adminProductId} and
                </if>
                <if test="t.storeVariantName != null">
                    store_variant_name = #{t.storeVariantName} and
                </if>
                <if test="t.storeVariantSku != null">
                    store_variant_sku = #{t.storeVariantSku} and
                </if>
                <if test="t.storeProductTitle != null">
                    store_product_title = #{t.storeProductTitle} and
                </if>
                <if test="t.storeVariantImage != null">
                    store_variant_image = #{t.storeVariantImage} and
                </if>
                <if test="t.adminVariantImage != null">
                    admin_variant_image = #{t.adminVariantImage} and
                </if>
                <if test="t.adminVariantSku != null">
                    admin_variant_sku = #{t.adminVariantSku} and
                </if>
                <if test="t.usdPrice != null">
                    usd_price = #{t.usdPrice} and
                </if>
                <if test="t.usdRate != null">
                    usd_rate = #{t.usdRate} and
                </if>
                <if test="t.cnyPrice != null">
                    cny_price = #{t.cnyPrice} and
                </if>
                <if test="t.quantity != null">
                    quantity = #{t.quantity} and
                </if>
                <if test="t.dischargeQuantity != null">
                    discharge_quantity = #{t.dischargeQuantity} and
                </if>
                <if test="t.adminVariantWeight != null">
                    admin_variant_weight = #{t.adminVariantWeight} and
                </if>
                <if test="t.adminVariantVolume != null">
                    admin_variant_volume = #{t.adminVariantVolume} and
                </if>
                <if test="t.itemType != null">
                    item_type = #{t.itemType} and
                </if>
                <if test="t.shippingId != null">
                    shipping_id = #{t.shippingId} and
                </if>
                <if test="t.quoteState != null">
                    quote_state = #{t.quoteState} and
                </if>
                <if test="t.length != null">
                    length = #{t.length} and
                </if>
                <if test="t.width != null">
                    width = #{t.width} and
                </if>
                <if test="t.height != null">
                    height = #{t.height} and
                </if>
                <if test="t.originalQuantity != null">
                    original_quantity = #{t.originalQuantity} and
                </if>
            </trim>
        </if>
    </sql>

    <select id="select" parameterType="com.upedge.common.base.Page" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_item
        <include refid="Query_Condition"/>
        order by id desc
    </select>

    <select id="count" parameterType="com.upedge.common.base.Page" resultType="java.lang.Long">
        select
        count(1)
        from order_item
        <include refid="Query_Condition"/>
    </select>

    <update id="updateShippingIdByAdminProductId">
        update order_item oi
                inner join `order` o
        on oi.order_id = o.id
                set oi.shipping_id = #{shippingId}
        where oi.admin_product_id = #{adminProductId}
          and o.pay_state = '0'
    </update>

    <update id="updateItemQuoteDetail" parameterType="com.upedge.common.model.pms.quote.CustomerProductQuoteVo">
        update order_item oi
        inner join `order` o
        on oi.order_id = o.id
        set oi.admin_product_id = #{productId},
        oi.admin_variant_id = #{variantId},
        oi.pay_variant_id = #{variantId},
        oi.admin_variant_sku = #{variantSku},
        oi.admin_variant_image = #{variantImage},
        oi.admin_variant_volume = #{volume},
        oi.admin_variant_weight = #{weight},
        oi.admin_variant_name = #{cnName},
        oi.shipping_id = #{productShippingId},
        oi.usd_price = #{usdPrice},
        oi.cny_price = #{cnyPrice},
        oi.discharge_quantity = '0',
        oi.quote_state = '1',
        oi.length = #{length},
        oi.width = #{width},
        oi.height = #{height,jdbcType=DECIMAL},
        oi.quantity = (#{quoteScale} * original_quantity),
        oi.quote_scale = #{quoteScale},
        oi.barcode = #{barcode}
        <if test="storeVariantImage != null and storeVariantImage != ''">
            ,oi.store_variant_image = #{storeVariantImage}
        </if>
        where oi.store_variant_id = #{storeVariantId}
        and o.pay_state &lt; '1'
    </update>

    <update id="updateVolumeByVariantId">
        update order_item oi
                inner join `order` o
        on oi.order_id = o.id
                set oi.length = #{length},
                        oi.width = #{width},
                        oi.height = #{height},
                        oi.admin_variant_volume = #{volume}
        where oi.admin_variant_id = #{variantId}
          and o.pay_state
         &lt; '1'
    </update>

    <select id="listOrderItem" resultType="com.upedge.oms.modules.order.vo.OrderItemVo">
        select oi.`id`                  as id,
               oi.`order_id`            as orderId,
               oi.`store_order_item_id` as storeOrderItemId,
               oi.`store_variant_id`    as storeVariantId,
               oi.`admin_variant_id`    as adminVariantId,
               oi.`admin_product_id`    as adminProductId,
               oi.`store_variant_name`  as storeVariantName,
               oi.`store_variant_sku`   as storeVariantSku,
               oi.`admin_variant_image` as adminVariantImage,
               oi.`store_product_title` as storeProductTitle,
               oi.`usd_price`           as usdPrice,
               oi.`quantity`            as quantity,
               oi.`discharge_quantity`  as dischargeQuantity,
               oi.admin_variant_weight  as adminVariantWeight,
               oi.admin_variant_volume  as adminVariantVolume,
               so.id                    as storeOrderId,
               so.plat_order_id         as platOrderId,
               so.plat_order_name       as platOrderName,
               so.store_id              as storeId,
               so.financial_status      as financialStatus,
               so.fulfillment_status    as fulfillmentStatus,
               so.create_time           as createTime,
               so.update_time           as updateTime,
               soi.plat_variant_id      as platVariantId,
               soi.plat_product_id      as platProductId,
               soi.store_product_id     as storeProductId,
               soi.plat_order_item_id   as platOrderItemId
        from order_item oi
                     left join store_order_item soi on oi.store_order_item_id = soi.id
                     left join store_order so on soi.store_order_id = so.id
        where order_id = #{orderId}
    </select>

    <select id="queryOrderItemByIdAndOrderId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_item
        where id=#{id} and order_id=#{orderId}
    </select>

    <select id="listSaiheOrderItemByOrderId" resultType="com.upedge.thirdparty.saihe.entity.SaiheOrderItem">
        select distinct oi.quantity          as productNum,
                        oi.usd_price         as salePrice,
                        oi.admin_variant_sku as sellerSku,
                        oi.admin_product_id  as adminProductId,
                        oi.id                as orderItemId,
                        so.plat_order_name   as orderName,
                        so.store_id          as storeId,
                        oi.admin_variant_id  as variantId
        from order_item oi
                     left join store_order so on so.id = oi.store_order_id
        where oi.order_id = #{orderId}
          and quantity > '0'
    </select>
    <select id="airwallex" resultType="com.upedge.oms.modules.order.vo.AirwallexVo">
        select
        o.id as orderId,
        o.pay_time as prderDateTime,
        oi.quantity * oi.usd_price as lineTotal,
        oi.quantity as itemQuantity,
        oi.usd_price,
        oi.admin_variant_sku,
        oi.admin_variant_id
        from order_item oi
        left join `order` o on oi.order_id = o.id
        where o.pay_state > 0 and o.order_status=0
        <if test="t.orderId != null">
            o.id = #{t.orderId} and
        </if>
        <if test="t.customerId != null">
            o.customer_id = #{t.customerId} and
        </if>
        <if test="t.beginTime != null and t.endTime != null">
            and o.pay_time between #{t.beginTime} and #{t.endTime}
        </if>
        order by o.pay_time desc
    </select>
    <select id="selectOrderItemListByProduct" resultType="java.lang.Long">
        select DISTINCT oi.order_id
        from `order` o
                     inner join `order_item` oi on oi.order_id = o.id
        WHERE oi.admin_product_id = #{productId}
          and o.pay_state = 0
          and o.quote_state = '3'
    </select>
    <select id="selectOrderItemListByVariantId" resultType="java.lang.Long">
        select DISTINCT oi.order_id
        from `order` o
                     inner join `order_item` oi on oi.order_id = o.id
        WHERE oi.admin_variant_id = #{variantId}
          and o.pay_state = 0
          and o.quote_state = '3'
    </select>

    <update id="updateQuoteStateByIds">
        update order_item
        set quote_state = #{quoteState}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        and quote_state = '0'
    </update>
    <update id="updateOrderAsQuotingByStoreVariantIds">
        update `order` o
        left join order_item oi
        on o.id = oi.order_id
        set o.quote_state = '1',oi.quote_state = '5'
        where oi.store_variant_id in
        <foreach collection="storeVariantIds" item="storeVariantId" open="(" separator="," close=")">
            #{storeVariantId}
        </foreach>
        and o.pay_state &lt; '1'
        and o.quote_state != '3'
        and oi.quote_state = '0'
    </update>

    <select id="selectUnpaidOrderIdByStoreVariantId" resultType="java.lang.Long">
        select distinct o.id
        from `order` o
                     left join order_item oi
                on o.id = oi.order_id
        where oi.store_variant_id = #{storeVariantId}
          and o.pay_state &lt; 1
    </select>

    <select id="selectUnQuoteItemOrderIdByOrderIds" resultType="java.lang.Long">
        select distinct order_id
        from order_item
        where order_id in
        <foreach collection="orderIds" item="orderId" open="(" close=")" separator=",">
            #{orderId}
        </foreach>
        and quote_state &lt; '5'
        and quote_state != '1'
    </select>

    <select id="selectItemByOrderId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_item
        where order_id = #{orderId}
    </select>

    <select id="selectStoreVariantIdsByOrderIds" resultType="java.lang.Long">
        select distinct store_variant_id
        from order_item
        where order_id in
        <foreach collection="orderIds" item="orderId" open="(" close=")" separator=",">
            #{orderId}
        </foreach>
        and quote_state = '0'
    </select>

    <update id="cancelItemQuoteDetail">
        update order_item oi
                inner join `order` o
        on oi.order_id = o.id
                set oi.admin_product_id = null,
                        oi.admin_variant_id = null,
                        oi.admin_variant_sku = null,
                        oi.admin_variant_image = null,
                        oi.admin_variant_volume = null,
                        oi.admin_variant_weight = null,
                        oi.shipping_id = null,
                        oi.usd_price = null,
                        oi.cny_price = null,
                        oi.discharge_quantity = '0',
                        oi.quote_state = '4'
        where oi.store_variant_id = #{storeVariantId}
          and o.pay_state
         &lt; '1'
    </update>

    <select id="selectOrderIdsByOrderIdsAndQuoteState" resultType="java.lang.Long">
        select distinct order_id
        from order_item
        where order_id in
        <foreach collection="orderIds" item="orderId" open="(" close=")" separator=",">
            #{orderId}
        </foreach>
        and quote_state = #{quoteState}
    </select>

    <select id="selectByStoreVariantIdAndQuoteState" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_item
        where store_variant_id = #{storeVariantId}
        <if test="quoteState != null">
            and quote_state = #{quoteState}
        </if>
        limit 1
    </select>

    <select id="selectByOrderIdAndStoreVariantId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_item
        where order_id = #{orderId}
        and store_variant_id = #{storeVariantId}
        limit 1
    </select>

    <update id="updateImageNameByStoreVariantId">
        update order_item
        <set>
            <if test="image != null">
                store_variant_image = #{image},
            </if>
            <if test="name != null">
                store_variant_name = #{name},
            </if>
        </set>
        where store_variant_id = #{storeVariantId}
    </update>

    <update id="updateQuantityByStoreOrderItemId">
        update order_item oi
                inner join `order` o
        on o.id = oi.order_id
                set oi.quantity = (#{quantity} * oi.quote_scale)
        where o.pay_state
         &lt; '1'
          and oi.store_order_item_id = #{storeOrderItemId}
          and quote_scale is not null
    </update>

    <select id="selectOrderIdsByStoreOrderItemIds" resultType="java.lang.Long">
        select distinct o.id
        from `order` o
        inner join order_item oi
        on o.id = oi.order_id
        where o.pay_state &lt; '1'
        and oi.store_order_item_id in
        <foreach collection="storeOrderItemIds" item="storeOrderItemId" open="(" separator="," close=")">
            #{storeOrderItemId}
        </foreach>
    </select>

    <update id="increaseQuantityById">
        update order_item
        set quantity = quantity + #{quantity}
        where id = #{id}
    </update>

    <resultMap id="OrderStoreVariantIdsVo" type="com.upedge.oms.modules.order.vo.OrderStoreVariantIdsVo">
        <id column="id" property="orderId"/>
        <collection property="storeVariantIds" ofType="java.lang.Long">
            <id property="value" column="store_variant_id"/>
        </collection>
    </resultMap>

    <select id="selectOrderStoreVariantIdsByStoreVariantIds"
            resultMap="OrderStoreVariantIdsVo">
        select o.id,oi.store_variant_id
        from `order` o
        inner join order_item oi
        on o.id = oi.order_id
        where o.pay_state &lt; '1'
        and o.order_type != '1'
        and oi.store_variant_id in
        <foreach collection="storeVariantIds" item="storeVariantId" open="(" close=")" separator=",">
            #{storeVariantId}
        </foreach>
    </select>

    <update id="initDischargeQuantityByPaymentId">
        update order_item oi
                inner join `order` o
        on oi.order_id = o.id
                set oi.discharge_quantity = '0'
        where o.payment_id = #{paymentId}
          and o.pay_state = '0'
    </update>

    <update id="updateCustomOrderItemPrice">
        update `order` o
                inner join `order_item` oi
        on o.id = oi.order_id
                set oi.cny_price = #{cnyPrice}, usd_price = #{usdPrice}
        where oi.admin_variant_id = #{variantId}
          and o.pay_state
         &lt; '1'
          and o.order_type = '4'
    </update>

    <select id="selectVariantPreSaleQuantity" resultType="com.upedge.common.model.pms.vo.VariantPreSaleQuantity">
        select admin_variant_id as variantId, sum(quantity) as preSaleQuantity
        from `order` o
        inner join order_item oi
        on o.id = oi.order_id
        where o.pay_state = '0'
        and oi.admin_variant_id in
        <foreach collection="variantIds" item="variantId" open="(" close=")" separator=",">
            #{variantId}
        </foreach>
        group by admin_variant_id
    </select>

    <select id="selectUnStockOrderItems" resultMap="BaseResultMap"
            parameterType="com.upedge.common.model.order.request.OrderItemPurchaseAdviceRequest">
        select oi.admin_variant_id, o.customer_id, sum(oi.quantity) as `quantity`
        from `order` o
                     inner join `order_item` oi
                on o.id = oi.order_id
        where o.pay_state = '1'
          and o.refund_state = '0'
          and o.ship_state = '0'
          and o.stock_state = '0'
          and o.pack_state = '1'
          and oi.admin_variant_id is not null
        group by oi.admin_variant_id, o.customer_id
        order by `quantity` desc
    </select>

    <select id="countUnStockOrderItems" resultType="java.lang.Long"
            parameterType="com.upedge.common.model.order.request.OrderItemPurchaseAdviceRequest">
        select count(distinct oi.admin_variant_id)
        from `order` o
        inner join `order_item` oi
        on o.id = oi.order_id
        where o.pay_state = '1'
        and o.refund_state = '0'
        and o.ship_state = '0'
        and o.stock_state = '0'
        <include refid="OrderItemPurchaseAdvice"/>
    </select>

    <sql id="OrderItemPurchaseAdvice">
        <if test="t != null">
            <if test="t.adminVariantId != null">
                oi.admin_variant_id = #{t.adminVariantId}
            </if>
            <if test="t.adminProductId != null">
                oi.admin_product_id = #{t.adminProductId}
            </if>
            <if test="t.storeVariantSku != null">
                oi.store_variant_sku = #{t.storeVariantSku}
            </if>
            <if test="t.storeProductId != null">
                oi.store_product_id = #{t.storeProductId}
            </if>
            <if test="t.customerId != null">
                o.customer_id = #{t.customerId}
            </if>
            <if test="t.orderId != null">
                o.id = #{t.orderId}
            </if>
        </if>
    </sql>

    <update id="batchUpdatePickedQuantity">
        <foreach collection="orderItems" item="item" separator=";">
            update order_item
            set picked_quantity = #{item.pickedQuantity}
            where id = #{item.id}
        </foreach>
    </update>

    <select id="selectByOrderIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_item
        where order_id in
        <foreach collection="orderIds" item="orderId" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </select>

    <select id="selectItemAdminVariantIds" resultType="java.lang.Long">
        select distinct admin_variant_id
        from `order` o
        inner join `order_item` oi
        on o.id = oi.order_id
        where o.pay_state = '1'
        and o.refund_state = '0'
        and o.ship_state = '0'
        and o.stock_state = '0'
        and oi.admin_variant_id is not null
        and o.pack_state = '1'
        <if test="adminVariantId != null">
            and oi.admin_variant_id = #{adminVariantId}
        </if>
        <if test="adminProductId != null">
            and oi.admin_product_id = #{adminProductId}
        </if>
        <if test="storeVariantSku != null">
            and oi.store_variant_sku = #{storeVariantSku}
        </if>
        <if test="storeProductId != null">
            and oi.store_product_id = #{storeProductId}
        </if>
        <if test="customerId != null">
            and o.customer_id = #{customerId}
        </if>
        <if test="orderId != null">
            and o.id = #{orderId}
        </if>
    </select>

    <select id="selectOutStockOrderIdsByVariantId" resultType="java.lang.Long">
        select distinct o.id
        from `order` o
                     inner join order_item oi
                on o.id = oi.order_id
        where o.pay_state = '1'
          and o.refund_state = '0'
          and o.ship_state = '0'
          and o.stock_state = '0'
          and o.pack_state = '1'
          and oi.admin_variant_id = #{variantId}
    </select>

    <update id="increaseLockQuantity">
        <foreach collection="items" item="item" separator=";">
            update order_item
            set locked_quantity = locked_quantity + #{item.lockedQuantity}
            where id = #{item.id}
        </foreach>
    </update>

    <select id="selectPaidItemLockedQuantityByStoreVariantId" resultMap="BaseResultMap">
        select oi.order_id, oi.admin_variant_id, locked_quantity
        from `order` o
                     inner join order_item oi
                on o.id = oi.order_id
        where oi.store_variant_id = #{storeVariantId}
          and o.pay_state = '1'
          and o.refund_state = '0'
          and o.ship_state = '0'
          and o.pick_state = '0'
    </select>

    <update id="updatePaidItemQuoteDetail">
        update order_item oi
                inner join `order` o
        on oi.order_id = o.id
                set oi.admin_product_id = #{productId},
                        oi.admin_variant_id = #{variantId},
                        oi.admin_variant_sku = #{variantSku},
                        oi.admin_variant_image = #{variantImage},
                        oi.admin_variant_name = #{cnName},
                        oi.barcode = #{barcode},
                        oi.locked_quantity = '0',
                        o.stock_state = '0'
        where oi.store_variant_id = #{storeVariantId}
          and o.pay_state = '1'
          and o.pick_state = '0'
          and o.ship_state = '0'
          and o.refund_state = '0'
    </update>

    <update id="updateLockedQuantityClear">
        update `order` o
                inner join order_item oi
        on o.id = oi.order_id
            set oi.locked_quantity = '0', o.stock_state = '0'
        where o.pay_state = '1'
          and o.pick_state = '0'
          and o.ship_state = '0'
          and o.refund_state = '0'
          and oi.admin_variant_id = #{variantId}
        and o.shipping_warehouse = #{warehouseCode}
    </update>
</mapper>
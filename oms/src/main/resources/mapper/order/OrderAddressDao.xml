<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.upedge.oms.modules.order.dao.OrderAddressDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.upedge.oms.modules.order.entity.OrderAddress" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="country" column="country"/>
        <result property="province" column="province"/>
        <result property="city" column="city"/>
        <result property="address1" column="address1"/>
        <result property="address2" column="address2"/>
        <result property="zip" column="zip"/>
        <result property="company" column="company"/>
        <result property="note" column="note"/>
        <result property="countryCode" column="country_code"/>
        <result property="provinceCode" column="province_code"/>
        <result property="orderId" column="order_id"/>
        <result property="ifEdited" column="if_edited"/>
    </resultMap>

    <resultMap id="SameAddressOrderVo" type="com.upedge.oms.modules.order.vo.SameAddressOrderVo">
        <result property="storeId" column="store_id"/>
        <result property="address" column="address"/>
        <collection property="orderIds" ofType="java.lang.Long">
            <result property="orderId" column="orderId"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        `id`,`name`,`first_name`,`last_name`,`email`,`phone`,`country`,`province`,`city`,`address1`,
        `address2`,`zip`,`company`,`note`,`country_code`,`province_code`,`order_id`,`if_edited`
    </sql>

    <select id="selectSameAddressOrderByStore" resultMap="SameAddressOrderVo">
        select o.store_id,
        replace(CONCAT_WS('_',concat(oa.first_name,oa.last_name),oa.country,oa.city,oa.province,oa.address1,oa.address2,oa.zip,oa.company,oa.phone),' ','') as address,
        o.id as `orderId`
        from order_address oa
        inner join `order` o
        on oa.order_id = o.id
        where o.customer_id = #{customerId}
        and o.pay_state = '0'
        and o.quote_state ='3'
        and o.order_type = '0'
        and oa.country is not null
    </select>

    <select id="selectSameAddressByOrderIds" resultMap="SameAddressOrderVo">
        select o.store_id,
        replace(CONCAT_WS('_',concat(oa.first_name,oa.last_name),oa.country,oa.city,oa.province,oa.address1,oa.address2,oa.zip,oa.company,oa.phone),' ','') as address,
        o.id as `orderId`
        from order_address oa
        inner join `order` o
        on oa.order_id = o.id
        where o.id in
        <foreach collection="orderIds" item="orderId" open="(" close=")" separator=",">
            #{orderId}
        </foreach>
        and o.pay_state = '0'
        and o.order_type = '0'
        and oa.country is not null
        group by store_id,address,oa.first_name,oa.last_name,oa.country,oa.city,oa.province,oa.address1,oa.address2,oa.zip,oa.company,oa.phone, o.id
    </select>

    <delete id="deleteByOrderIds">
        delete from order_address
        where order_id in
        <foreach collection="orderIds" item="orderId" open="(" close=")" separator=",">
            #{orderId}
        </foreach>
    </delete>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from order_address
        where id = #{id}
    </select>

    <select id="selectByOrderId"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from order_address
        where order_id = #{orderId}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="com.upedge.oms.modules.order.entity.OrderAddress">
        delete from order_address
        where id = #{id}
    </delete>

    <update id="updateByPrimaryKeySelective" parameterType="com.upedge.oms.modules.order.entity.OrderAddress">
        update order_address
        <set>
            <if test="firstName != null">
                first_name = #{firstName},
            </if>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="lastName != null">
                last_name = #{lastName},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="country != null">
                country = #{country},
            </if>
            <if test="province != null">
                province = #{province},
            </if>
            <if test="city != null">
                city = #{city},
            </if>
            <if test="address1 != null">
                address1 = #{address1},
            </if>
            <if test="address2 != null">
                address2 = #{address2},
            </if>
            <if test="zip != null">
                zip = #{zip},
            </if>
            <if test="company != null">
                company = #{company},
            </if>
            <if test="note != null">
                note = #{note},
            </if>
            <if test="countryCode != null">
                country_code = #{countryCode},
            </if>
            <if test="provinceCode != null">
                province_code = #{provinceCode},
            </if>
            <if test="orderId != null">
                order_id = #{orderId},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.upedge.oms.modules.order.entity.OrderAddress">
        update order_address
        <set>
        id = #{id},
            `name` = #{name},
        first_name = #{firstName},
        last_name = #{lastName},
        email = #{email},
        phone = #{phone},
        country = #{country},
        province = #{province},
        city = #{city},
        address1 = #{address1},
        address2 = #{address2},
        zip = #{zip},
        company = #{company},
        note = #{note},
        country_code = #{countryCode},
        province_code = #{provinceCode},
        order_id = #{orderId},
        </set>
        where id = #{id}
    </update>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.upedge.oms.modules.order.entity.OrderAddress" useGeneratedKeys="true">
        insert into order_address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            `name`,
            first_name,
            last_name,
            email,
            phone,
            country,
            province,
            city,
            address1,
            address2,
            zip,
            company,
            note,
            country_code,
            province_code,
            order_id
        </trim>
        values (
        #{id},
        #{name},
        #{firstName},
        #{lastName},
        #{email},
        #{phone},
        #{country},
        #{province},
        #{city},
        #{address1},
        #{address2},
        #{zip},
        #{company},
        #{note},
        #{countryCode},
        #{provinceCode},
        #{orderId}
        )
    </insert>

    <insert id="insertSelective"  keyColumn="id" keyProperty="id"  parameterType="com.upedge.oms.modules.order.entity.OrderAddress" useGeneratedKeys="true">
        insert into order_address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null" >
              id
            </if>
            <if test="firstName != null" >
              first_name
            </if>
            <if test="lastName != null" >
              last_name
            </if>
            <if test="email != null" >
              email
            </if>
            <if test="phone != null" >
              phone
            </if>
            <if test="country != null" >
              country
            </if>
            <if test="province != null" >
              province
            </if>
            <if test="city != null" >
              city
            </if>
            <if test="address1 != null" >
              address1
            </if>
            <if test="address2 != null" >
              address2
            </if>
            <if test="zip != null" >
              zip
            </if>
            <if test="company != null" >
              company
            </if>
            <if test="note != null" >
              note
            </if>
            <if test="countryCode != null" >
              country_code
            </if>
            <if test="provinceCode != null" >
              province_code
            </if>
            <if test="orderId != null" >
              order_id
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                #{id}
            </if>
            <if test="firstName != null" >
                #{firstName}
            </if>
            <if test="lastName != null" >
                #{lastName}
            </if>
            <if test="email != null" >
                #{email}
            </if>
            <if test="phone != null" >
                #{phone}
            </if>
            <if test="country != null" >
                #{country}
            </if>
            <if test="province != null" >
                #{province}
            </if>
            <if test="city != null" >
                #{city}
            </if>
            <if test="address1 != null" >
                #{address1}
            </if>
            <if test="address2 != null" >
                #{address2}
            </if>
            <if test="zip != null" >
                #{zip}
            </if>
            <if test="company != null" >
                #{company}
            </if>
            <if test="note != null" >
                #{note}
            </if>
            <if test="countryCode != null" >
                #{countryCode}
            </if>
            <if test="provinceCode != null" >
                #{provinceCode}
            </if>
            <if test="orderId != null" >
                #{orderId}
            </if>

        </trim>
    </insert>

    <insert id="insertByBatch" parameterType="java.util.List">
        insert into order_address
        <trim prefix="(" suffix=")" suffixOverrides=",">
           id,
           `name`,
           first_name,
           last_name,
           email,
           phone,
           country,
           province,
           city,
           address1,
           address2,
           zip,
           company,
           note,
           country_code,
           province_code,
           order_id
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
               #{item.id},
               #{item.name},
               #{item.firstName},
               #{item.lastName},
               #{item.email},
               #{item.phone},
               #{item.country},
               #{item.province},
               #{item.city},
               #{item.address1},
               #{item.address2},
               #{item.zip},
               #{item.company},
               #{item.note},
               #{item.countryCode},
               #{item.provinceCode},
               #{item.orderId}
            </trim>
        </foreach>
    </insert>

    <sql id="Query_Condition">
        <if test="t != null">
            where
            <trim prefix=" " suffix=" " suffixOverrides=" and ">
                1 = 1 and
                    <if test="t.id != null">
                        id = #{t.id} and
                    </if>
                    <if test="t.firstName != null">
                        first_name = #{t.firstName} and
                    </if>
                    <if test="t.lastName != null">
                        last_name = #{t.lastName} and
                    </if>
                    <if test="t.email != null">
                        email = #{t.email} and
                    </if>
                    <if test="t.phone != null">
                        phone = #{t.phone} and
                    </if>
                    <if test="t.country != null">
                        country = #{t.country} and
                    </if>
                    <if test="t.province != null">
                        province = #{t.province} and
                    </if>
                    <if test="t.city != null">
                        city = #{t.city} and
                    </if>
                    <if test="t.address1 != null">
                        address1 = #{t.address1} and
                    </if>
                    <if test="t.address2 != null">
                        address2 = #{t.address2} and
                    </if>
                    <if test="t.zip != null">
                        zip = #{t.zip} and
                    </if>
                    <if test="t.company != null">
                        company = #{t.company} and
                    </if>
                    <if test="t.note != null">
                        note = #{t.note} and
                    </if>
                    <if test="t.countryCode != null">
                        country_code = #{t.countryCode} and
                    </if>
                    <if test="t.provinceCode != null">
                        province_code = #{t.provinceCode} and
                    </if>
                    <if test="t.orderId != null">
                        order_id = #{t.orderId} and
                    </if>
            </trim>
        </if>
    </sql>

    <select id="select" parameterType="com.upedge.common.base.Page" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from order_address
        <include refid="Query_Condition"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="pageNum != null and pageSize != null">
            limit #{fromNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="count" parameterType="com.upedge.common.base.Page" resultType="java.lang.Long">
        select
        count(1)
        from order_address
        <include refid="Query_Condition"/>
    </select>

    <select id="queryOrderAddressByOrderId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from order_address where order_id=#{orderId}
    </select>

</mapper>